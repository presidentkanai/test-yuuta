{"ast":null,"code":"import { BaseError } from '../../errors.js';\nexport class InvalidAbiParameterError extends BaseError {\n  constructor(_ref) {\n    let {\n      param\n    } = _ref;\n    super('Failed to parse ABI parameter.', {\n      details: `parseAbiParameter(${JSON.stringify(param, null, 2)})`,\n      docsPath: '/api/human.html#parseabiparameter-1'\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'InvalidAbiParameterError'\n    });\n  }\n}\nexport class InvalidAbiParametersError extends BaseError {\n  constructor(_ref2) {\n    let {\n      params\n    } = _ref2;\n    super('Failed to parse ABI parameters.', {\n      details: `parseAbiParameters(${JSON.stringify(params, null, 2)})`,\n      docsPath: '/api/human.html#parseabiparameters-1'\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'InvalidAbiParametersError'\n    });\n  }\n}\nexport class InvalidParameterError extends BaseError {\n  constructor(_ref3) {\n    let {\n      param\n    } = _ref3;\n    super('Invalid ABI parameter.', {\n      details: param\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'InvalidParameterError'\n    });\n  }\n}\nexport class SolidityProtectedKeywordError extends BaseError {\n  constructor(_ref4) {\n    let {\n      param,\n      name\n    } = _ref4;\n    super('Invalid ABI parameter.', {\n      details: param,\n      metaMessages: [`\"${name}\" is a protected Solidity keyword. More info: https://docs.soliditylang.org/en/latest/cheatsheet.html`]\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'SolidityProtectedKeywordError'\n    });\n  }\n}\nexport class InvalidModifierError extends BaseError {\n  constructor(_ref5) {\n    let {\n      param,\n      type,\n      modifier\n    } = _ref5;\n    super('Invalid ABI parameter.', {\n      details: param,\n      metaMessages: [`Modifier \"${modifier}\" not allowed${type ? ` in \"${type}\" type` : ''}.`]\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'InvalidModifierError'\n    });\n  }\n}\nexport class InvalidFunctionModifierError extends BaseError {\n  constructor(_ref6) {\n    let {\n      param,\n      type,\n      modifier\n    } = _ref6;\n    super('Invalid ABI parameter.', {\n      details: param,\n      metaMessages: [`Modifier \"${modifier}\" not allowed${type ? ` in \"${type}\" type` : ''}.`, `Data location can only be specified for array, struct, or mapping types, but \"${modifier}\" was given.`]\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'InvalidFunctionModifierError'\n    });\n  }\n}\nexport class InvalidAbiTypeParameterError extends BaseError {\n  constructor(_ref7) {\n    let {\n      abiParameter\n    } = _ref7;\n    super('Invalid ABI parameter.', {\n      details: JSON.stringify(abiParameter, null, 2),\n      metaMessages: ['ABI parameter type is invalid.']\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'InvalidAbiTypeParameterError'\n    });\n  }\n}","map":{"version":3,"names":["BaseError","InvalidAbiParameterError","constructor","_ref","param","details","JSON","stringify","docsPath","Object","defineProperty","InvalidAbiParametersError","_ref2","params","InvalidParameterError","_ref3","SolidityProtectedKeywordError","_ref4","name","metaMessages","InvalidModifierError","_ref5","type","modifier","InvalidFunctionModifierError","_ref6","InvalidAbiTypeParameterError","_ref7","abiParameter"],"sources":["/Users/kanaiyuuta/Downloads/test-yuuta-main/node_modules/viem/node_modules/abitype/src/human-readable/errors/abiParameter.ts"],"sourcesContent":["import type { AbiItemType, AbiParameter } from '../../abi.js'\nimport { BaseError } from '../../errors.js'\nimport type { Modifier } from '../types/signatures.js'\n\nexport class InvalidAbiParameterError extends BaseError {\n  override name = 'InvalidAbiParameterError'\n\n  constructor({ param }: { param: string | object }) {\n    super('Failed to parse ABI parameter.', {\n      details: `parseAbiParameter(${JSON.stringify(param, null, 2)})`,\n      docsPath: '/api/human.html#parseabiparameter-1',\n    })\n  }\n}\n\nexport class InvalidAbiParametersError extends BaseError {\n  override name = 'InvalidAbiParametersError'\n\n  constructor({ params }: { params: string | object }) {\n    super('Failed to parse ABI parameters.', {\n      details: `parseAbiParameters(${JSON.stringify(params, null, 2)})`,\n      docsPath: '/api/human.html#parseabiparameters-1',\n    })\n  }\n}\n\nexport class InvalidParameterError extends BaseError {\n  override name = 'InvalidParameterError'\n\n  constructor({ param }: { param: string }) {\n    super('Invalid ABI parameter.', {\n      details: param,\n    })\n  }\n}\n\nexport class SolidityProtectedKeywordError extends BaseError {\n  override name = 'SolidityProtectedKeywordError'\n\n  constructor({ param, name }: { param: string; name: string }) {\n    super('Invalid ABI parameter.', {\n      details: param,\n      metaMessages: [\n        `\"${name}\" is a protected Solidity keyword. More info: https://docs.soliditylang.org/en/latest/cheatsheet.html`,\n      ],\n    })\n  }\n}\n\nexport class InvalidModifierError extends BaseError {\n  override name = 'InvalidModifierError'\n\n  constructor({\n    param,\n    type,\n    modifier,\n  }: {\n    param: string\n    type?: AbiItemType | 'struct' | undefined\n    modifier: Modifier\n  }) {\n    super('Invalid ABI parameter.', {\n      details: param,\n      metaMessages: [\n        `Modifier \"${modifier}\" not allowed${\n          type ? ` in \"${type}\" type` : ''\n        }.`,\n      ],\n    })\n  }\n}\n\nexport class InvalidFunctionModifierError extends BaseError {\n  override name = 'InvalidFunctionModifierError'\n\n  constructor({\n    param,\n    type,\n    modifier,\n  }: {\n    param: string\n    type?: AbiItemType | 'struct' | undefined\n    modifier: Modifier\n  }) {\n    super('Invalid ABI parameter.', {\n      details: param,\n      metaMessages: [\n        `Modifier \"${modifier}\" not allowed${\n          type ? ` in \"${type}\" type` : ''\n        }.`,\n        `Data location can only be specified for array, struct, or mapping types, but \"${modifier}\" was given.`,\n      ],\n    })\n  }\n}\n\nexport class InvalidAbiTypeParameterError extends BaseError {\n  override name = 'InvalidAbiTypeParameterError'\n\n  constructor({\n    abiParameter,\n  }: {\n    abiParameter: AbiParameter & { indexed?: boolean | undefined }\n  }) {\n    super('Invalid ABI parameter.', {\n      details: JSON.stringify(abiParameter, null, 2),\n      metaMessages: ['ABI parameter type is invalid.'],\n    })\n  }\n}\n"],"mappings":"AACA,SAASA,SAAS,QAAQ,iBAAiB;AAG3C,OAAM,MAAOC,wBAAyB,SAAQD,SAAS;EAGrDE,YAAAC,IAAA,EAAiD;IAAA,IAArC;MAAEC;IAAK,CAA8B,GAAAD,IAAA;IAC/C,KAAK,CAAC,gCAAgC,EAAE;MACtCE,OAAO,EAAE,qBAAqBC,IAAI,CAACC,SAAS,CAACH,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG;MAC/DI,QAAQ,EAAE;KACX,CAAC;IANKC,MAAA,CAAAC,cAAA;;;;aAAO;;EAOhB;;AAGF,OAAM,MAAOC,yBAA0B,SAAQX,SAAS;EAGtDE,YAAAU,KAAA,EAAmD;IAAA,IAAvC;MAAEC;IAAM,CAA+B,GAAAD,KAAA;IACjD,KAAK,CAAC,iCAAiC,EAAE;MACvCP,OAAO,EAAE,sBAAsBC,IAAI,CAACC,SAAS,CAACM,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG;MACjEL,QAAQ,EAAE;KACX,CAAC;IANKC,MAAA,CAAAC,cAAA;;;;aAAO;;EAOhB;;AAGF,OAAM,MAAOI,qBAAsB,SAAQd,SAAS;EAGlDE,YAAAa,KAAA,EAAwC;IAAA,IAA5B;MAAEX;IAAK,CAAqB,GAAAW,KAAA;IACtC,KAAK,CAAC,wBAAwB,EAAE;MAC9BV,OAAO,EAAED;KACV,CAAC;IALKK,MAAA,CAAAC,cAAA;;;;aAAO;;EAMhB;;AAGF,OAAM,MAAOM,6BAA8B,SAAQhB,SAAS;EAG1DE,YAAAe,KAAA,EAA4D;IAAA,IAAhD;MAAEb,KAAK;MAAEc;IAAI,CAAmC,GAAAD,KAAA;IAC1D,KAAK,CAAC,wBAAwB,EAAE;MAC9BZ,OAAO,EAAED,KAAK;MACde,YAAY,EAAE,CACZ,IAAID,IAAI,uGAAuG;KAElH,CAAC;IARKT,MAAA,CAAAC,cAAA;;;;aAAO;;EAShB;;AAGF,OAAM,MAAOU,oBAAqB,SAAQpB,SAAS;EAGjDE,YAAAmB,KAAA,EAQC;IAAA,IARW;MACVjB,KAAK;MACLkB,IAAI;MACJC;IAAQ,CAKT,GAAAF,KAAA;IACC,KAAK,CAAC,wBAAwB,EAAE;MAC9BhB,OAAO,EAAED,KAAK;MACde,YAAY,EAAE,CACZ,aAAaI,QAAQ,gBACnBD,IAAI,GAAG,QAAQA,IAAI,QAAQ,GAAG,EAChC,GAAG;KAEN,CAAC;IAlBKb,MAAA,CAAAC,cAAA;;;;aAAO;;EAmBhB;;AAGF,OAAM,MAAOc,4BAA6B,SAAQxB,SAAS;EAGzDE,YAAAuB,KAAA,EAQC;IAAA,IARW;MACVrB,KAAK;MACLkB,IAAI;MACJC;IAAQ,CAKT,GAAAE,KAAA;IACC,KAAK,CAAC,wBAAwB,EAAE;MAC9BpB,OAAO,EAAED,KAAK;MACde,YAAY,EAAE,CACZ,aAAaI,QAAQ,gBACnBD,IAAI,GAAG,QAAQA,IAAI,QAAQ,GAAG,EAChC,GAAG,EACH,iFAAiFC,QAAQ,cAAc;KAE1G,CAAC;IAnBKd,MAAA,CAAAC,cAAA;;;;aAAO;;EAoBhB;;AAGF,OAAM,MAAOgB,4BAA6B,SAAQ1B,SAAS;EAGzDE,YAAAyB,KAAA,EAIC;IAAA,IAJW;MACVC;IAAY,CAGb,GAAAD,KAAA;IACC,KAAK,CAAC,wBAAwB,EAAE;MAC9BtB,OAAO,EAAEC,IAAI,CAACC,SAAS,CAACqB,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC;MAC9CT,YAAY,EAAE,CAAC,gCAAgC;KAChD,CAAC;IAVKV,MAAA,CAAAC,cAAA;;;;aAAO;;EAWhB"},"metadata":{},"sourceType":"module","externalDependencies":[]}