{"ast":null,"code":"/**\n * Modifies the bytecode stored at an account's address.\n *\n * - Docs: https://viem.sh/docs/actions/test/setCode.html\n *\n * @param client - Client to use\n * @param parameters – {@link SetCodeParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setCode } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setCode(client, {\n *   address: '0xe846c6fcf817734ca4527b28ccb4aea2b6663c79',\n *   bytecode: '0x60806040526000600355600019600955600c80546001600160a01b031916737a250d5630b4cf539739df…',\n * })\n */\nexport async function setCode(client, _ref) {\n  let {\n    address,\n    bytecode\n  } = _ref;\n  await client.request({\n    method: `${client.mode}_setCode`,\n    params: [address, bytecode]\n  });\n}","map":{"version":3,"names":["setCode","client","_ref","address","bytecode","request","method","mode","params"],"sources":["/Users/kanaiyuuta/Downloads/test-yuuta-main/node_modules/viem/actions/test/setCode.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\nimport type { Hex } from '../../types/misc.js'\n\nexport type SetCodeParameters = {\n  /** The account address. */\n  address: Address\n  /** The bytecode to set */\n  bytecode: Hex\n}\n\n/**\n * Modifies the bytecode stored at an account's address.\n *\n * - Docs: https://viem.sh/docs/actions/test/setCode.html\n *\n * @param client - Client to use\n * @param parameters – {@link SetCodeParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setCode } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setCode(client, {\n *   address: '0xe846c6fcf817734ca4527b28ccb4aea2b6663c79',\n *   bytecode: '0x60806040526000600355600019600955600c80546001600160a01b031916737a250d5630b4cf539739df…',\n * })\n */\nexport async function setCode<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { address, bytecode }: SetCodeParameters,\n) {\n  await client.request({\n    method: `${client.mode}_setCode`,\n    params: [address, bytecode],\n  })\n}\n"],"mappings":"AAkBA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,OAAO,eAAeA,OAAOA,CAI3BC,MAAsE,EAAAC,IAAA,EAC9B;EAAA,IAAxC;IAAEC,OAAO;IAAEC;EAAQ,CAAqB,GAAAF,IAAA;EAExC,MAAMD,MAAM,CAACI,OAAO,CAAC;IACnBC,MAAM,EAAE,GAAGL,MAAM,CAACM,IAAI,UAAU;IAChCC,MAAM,EAAE,CAACL,OAAO,EAAEC,QAAQ;GAC3B,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}