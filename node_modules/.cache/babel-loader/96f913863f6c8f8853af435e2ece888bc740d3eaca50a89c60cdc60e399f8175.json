{"ast":null,"code":"import { SizeExceedsPaddingSizeError } from '../../errors/data.js';\nexport function pad(hexOrBytes) {\n  let {\n    dir,\n    size = 32\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (typeof hexOrBytes === 'string') return padHex(hexOrBytes, {\n    dir,\n    size\n  });\n  return padBytes(hexOrBytes, {\n    dir,\n    size\n  });\n}\nexport function padHex(hex_) {\n  let {\n    dir,\n    size = 32\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (size === null) return hex_;\n  const hex = hex_.replace('0x', '');\n  if (hex.length > size * 2) throw new SizeExceedsPaddingSizeError({\n    size: Math.ceil(hex.length / 2),\n    targetSize: size,\n    type: 'hex'\n  });\n  return `0x${hex[dir === 'right' ? 'padEnd' : 'padStart'](size * 2, '0')}`;\n}\nexport function padBytes(bytes) {\n  let {\n    dir,\n    size = 32\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (size === null) return bytes;\n  if (bytes.length > size) throw new SizeExceedsPaddingSizeError({\n    size: bytes.length,\n    targetSize: size,\n    type: 'bytes'\n  });\n  const paddedBytes = new Uint8Array(size);\n  for (let i = 0; i < size; i++) {\n    const padEnd = dir === 'right';\n    paddedBytes[padEnd ? i : size - i - 1] = bytes[padEnd ? i : bytes.length - i - 1];\n  }\n  return paddedBytes;\n}","map":{"version":3,"names":["SizeExceedsPaddingSizeError","pad","hexOrBytes","dir","size","arguments","length","undefined","padHex","padBytes","hex_","hex","replace","Math","ceil","targetSize","type","bytes","paddedBytes","Uint8Array","i","padEnd"],"sources":["/Users/kanaiyuuta/Downloads/test-yuuta-main/node_modules/viem/utils/data/pad.ts"],"sourcesContent":["import { SizeExceedsPaddingSizeError } from '../../errors/data.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\ntype PadOptions = {\n  dir?: 'left' | 'right'\n  size?: number | null\n}\nexport type PadReturnType<TValue extends ByteArray | Hex> = TValue extends Hex\n  ? Hex\n  : ByteArray\n\nexport function pad<TValue extends ByteArray | Hex>(\n  hexOrBytes: TValue,\n  { dir, size = 32 }: PadOptions = {},\n): PadReturnType<TValue> {\n  if (typeof hexOrBytes === 'string')\n    return padHex(hexOrBytes, { dir, size }) as PadReturnType<TValue>\n  return padBytes(hexOrBytes, { dir, size }) as PadReturnType<TValue>\n}\n\nexport function padHex(hex_: Hex, { dir, size = 32 }: PadOptions = {}) {\n  if (size === null) return hex_\n  const hex = hex_.replace('0x', '')\n  if (hex.length > size * 2)\n    throw new SizeExceedsPaddingSizeError({\n      size: Math.ceil(hex.length / 2),\n      targetSize: size,\n      type: 'hex',\n    })\n\n  return `0x${hex[dir === 'right' ? 'padEnd' : 'padStart'](\n    size * 2,\n    '0',\n  )}` as Hex\n}\n\nexport function padBytes(\n  bytes: ByteArray,\n  { dir, size = 32 }: PadOptions = {},\n) {\n  if (size === null) return bytes\n  if (bytes.length > size)\n    throw new SizeExceedsPaddingSizeError({\n      size: bytes.length,\n      targetSize: size,\n      type: 'bytes',\n    })\n  const paddedBytes = new Uint8Array(size)\n  for (let i = 0; i < size; i++) {\n    const padEnd = dir === 'right'\n    paddedBytes[padEnd ? i : size - i - 1] =\n      bytes[padEnd ? i : bytes.length - i - 1]\n  }\n  return paddedBytes\n}\n"],"mappings":"AAAA,SAASA,2BAA2B,QAAQ,sBAAsB;AAWlE,OAAM,SAAUC,GAAGA,CACjBC,UAAkB,EACiB;EAAA,IAAnC;IAAEC,GAAG;IAAEC,IAAI,GAAG;EAAE,IAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAiB,EAAE;EAEnC,IAAI,OAAOH,UAAU,KAAK,QAAQ,EAChC,OAAOM,MAAM,CAACN,UAAU,EAAE;IAAEC,GAAG;IAAEC;EAAI,CAAE,CAA0B;EACnE,OAAOK,QAAQ,CAACP,UAAU,EAAE;IAAEC,GAAG;IAAEC;EAAI,CAAE,CAA0B;AACrE;AAEA,OAAM,SAAUI,MAAMA,CAACE,IAAS,EAAqC;EAAA,IAAnC;IAAEP,GAAG;IAAEC,IAAI,GAAG;EAAE,IAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAiB,EAAE;EACnE,IAAID,IAAI,KAAK,IAAI,EAAE,OAAOM,IAAI;EAC9B,MAAMC,GAAG,GAAGD,IAAI,CAACE,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;EAClC,IAAID,GAAG,CAACL,MAAM,GAAGF,IAAI,GAAG,CAAC,EACvB,MAAM,IAAIJ,2BAA2B,CAAC;IACpCI,IAAI,EAAES,IAAI,CAACC,IAAI,CAACH,GAAG,CAACL,MAAM,GAAG,CAAC,CAAC;IAC/BS,UAAU,EAAEX,IAAI;IAChBY,IAAI,EAAE;GACP,CAAC;EAEJ,OAAO,KAAKL,GAAG,CAACR,GAAG,KAAK,OAAO,GAAG,QAAQ,GAAG,UAAU,CAAC,CACtDC,IAAI,GAAG,CAAC,EACR,GAAG,CACJ,EAAS;AACZ;AAEA,OAAM,SAAUK,QAAQA,CACtBQ,KAAgB,EACmB;EAAA,IAAnC;IAAEd,GAAG;IAAEC,IAAI,GAAG;EAAE,IAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAiB,EAAE;EAEnC,IAAID,IAAI,KAAK,IAAI,EAAE,OAAOa,KAAK;EAC/B,IAAIA,KAAK,CAACX,MAAM,GAAGF,IAAI,EACrB,MAAM,IAAIJ,2BAA2B,CAAC;IACpCI,IAAI,EAAEa,KAAK,CAACX,MAAM;IAClBS,UAAU,EAAEX,IAAI;IAChBY,IAAI,EAAE;GACP,CAAC;EACJ,MAAME,WAAW,GAAG,IAAIC,UAAU,CAACf,IAAI,CAAC;EACxC,KAAK,IAAIgB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGhB,IAAI,EAAEgB,CAAC,EAAE,EAAE;IAC7B,MAAMC,MAAM,GAAGlB,GAAG,KAAK,OAAO;IAC9Be,WAAW,CAACG,MAAM,GAAGD,CAAC,GAAGhB,IAAI,GAAGgB,CAAC,GAAG,CAAC,CAAC,GACpCH,KAAK,CAACI,MAAM,GAAGD,CAAC,GAAGH,KAAK,CAACX,MAAM,GAAGc,CAAC,GAAG,CAAC,CAAC;;EAE5C,OAAOF,WAAW;AACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}