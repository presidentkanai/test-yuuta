{"ast":null,"code":"import { concat } from '../data/concat.js';\nimport { stringToBytes, toBytes } from '../encoding/toBytes.js';\nimport { keccak256 } from '../hash/keccak256.js';\nexport function hashMessage(message, to_) {\n  const messageBytes = (() => {\n    if (typeof message === 'string') return stringToBytes(message);\n    if (message.raw instanceof Uint8Array) return message.raw;\n    return toBytes(message.raw);\n  })();\n  const prefixBytes = stringToBytes(`\\x19Ethereum Signed Message:\\n${messageBytes.length}`);\n  return keccak256(concat([prefixBytes, messageBytes]), to_);\n}","map":{"version":3,"names":["concat","stringToBytes","toBytes","keccak256","hashMessage","message","to_","messageBytes","raw","Uint8Array","prefixBytes","length"],"sources":["/Users/kanaiyuuta/Downloads/test-yuuta-main/node_modules/viem/utils/signature/hashMessage.ts"],"sourcesContent":["import type { ByteArray, Hex, SignableMessage } from '../../types/misc.js'\nimport { concat } from '../data/concat.js'\nimport { stringToBytes, toBytes } from '../encoding/toBytes.js'\nimport { keccak256 } from '../hash/keccak256.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type HashMessage<TTo extends To> =\n  | (TTo extends 'bytes' ? ByteArray : never)\n  | (TTo extends 'hex' ? Hex : never)\n\nexport function hashMessage<TTo extends To = 'hex'>(\n  message: SignableMessage,\n  to_?: TTo,\n): HashMessage<TTo> {\n  const messageBytes = (() => {\n    if (typeof message === 'string') return stringToBytes(message)\n    if (message.raw instanceof Uint8Array) return message.raw\n    return toBytes(message.raw)\n  })()\n  const prefixBytes = stringToBytes(\n    `\\x19Ethereum Signed Message:\\n${messageBytes.length}`,\n  )\n  return keccak256(concat([prefixBytes, messageBytes]), to_)\n}\n"],"mappings":"AACA,SAASA,MAAM,QAAQ,mBAAmB;AAC1C,SAASC,aAAa,EAAEC,OAAO,QAAQ,wBAAwB;AAC/D,SAASC,SAAS,QAAQ,sBAAsB;AAQhD,OAAM,SAAUC,WAAWA,CACzBC,OAAwB,EACxBC,GAAS;EAET,MAAMC,YAAY,GAAG,CAAC,MAAK;IACzB,IAAI,OAAOF,OAAO,KAAK,QAAQ,EAAE,OAAOJ,aAAa,CAACI,OAAO,CAAC;IAC9D,IAAIA,OAAO,CAACG,GAAG,YAAYC,UAAU,EAAE,OAAOJ,OAAO,CAACG,GAAG;IACzD,OAAON,OAAO,CAACG,OAAO,CAACG,GAAG,CAAC;EAC7B,CAAC,EAAC,CAAE;EACJ,MAAME,WAAW,GAAGT,aAAa,CAC/B,iCAAiCM,YAAY,CAACI,MAAM,EAAE,CACvD;EACD,OAAOR,SAAS,CAACH,MAAM,CAAC,CAACU,WAAW,EAAEH,YAAY,CAAC,CAAC,EAAED,GAAG,CAAC;AAC5D"},"metadata":{},"sourceType":"module","externalDependencies":[]}