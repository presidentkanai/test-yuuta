{"ast":null,"code":"/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n */\n\n/**\n * @typedef {Root | Content} Node\n */\n\nconst own = {}.hasOwnProperty;\n\n/**\n * Check if `node`is an element and has a `field` property.\n *\n * @param {unknown} node\n *   Thing to check (typically `Element`).\n * @param {unknown} field\n *   Field name to check (typically `string`).\n * @returns {boolean}\n *   Whether `node` is an element that has a `field` property.\n */\nexport function hasProperty(node, field) {\n  const value = typeof field === 'string' && isNode(node) && node.type === 'element' && node.properties && own.call(node.properties, field) && node.properties[field];\n  return value !== null && value !== undefined && value !== false;\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction isNode(value) {\n  return Boolean(value && typeof value === 'object' && 'type' in value);\n}","map":{"version":3,"names":["own","hasOwnProperty","hasProperty","node","field","value","isNode","type","properties","call","undefined","Boolean"],"sources":["/Users/kanaiyuuta/Downloads/test-yuuta-main/node_modules/hast-util-has-property/lib/index.js"],"sourcesContent":["/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Content} Content\n */\n\n/**\n * @typedef {Root | Content} Node\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Check if `node`is an element and has a `field` property.\n *\n * @param {unknown} node\n *   Thing to check (typically `Element`).\n * @param {unknown} field\n *   Field name to check (typically `string`).\n * @returns {boolean}\n *   Whether `node` is an element that has a `field` property.\n */\nexport function hasProperty(node, field) {\n  const value =\n    typeof field === 'string' &&\n    isNode(node) &&\n    node.type === 'element' &&\n    node.properties &&\n    own.call(node.properties, field) &&\n    node.properties[field]\n\n  return value !== null && value !== undefined && value !== false\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction isNode(value) {\n  return Boolean(value && typeof value === 'object' && 'type' in value)\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,MAAMA,GAAG,GAAG,CAAC,CAAC,CAACC,cAAc;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,WAAWA,CAACC,IAAI,EAAEC,KAAK,EAAE;EACvC,MAAMC,KAAK,GACT,OAAOD,KAAK,KAAK,QAAQ,IACzBE,MAAM,CAACH,IAAI,CAAC,IACZA,IAAI,CAACI,IAAI,KAAK,SAAS,IACvBJ,IAAI,CAACK,UAAU,IACfR,GAAG,CAACS,IAAI,CAACN,IAAI,CAACK,UAAU,EAAEJ,KAAK,CAAC,IAChCD,IAAI,CAACK,UAAU,CAACJ,KAAK,CAAC;EAExB,OAAOC,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAKK,SAAS,IAAIL,KAAK,KAAK,KAAK;AACjE;;AAEA;AACA;AACA;AACA;AACA,SAASC,MAAMA,CAACD,KAAK,EAAE;EACrB,OAAOM,OAAO,CAACN,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAI,MAAM,IAAIA,KAAK,CAAC;AACvE"},"metadata":{},"sourceType":"module","externalDependencies":[]}