{"ast":null,"code":"import { BaseError } from './base.js';\nexport class BlockNotFoundError extends BaseError {\n  constructor(_ref) {\n    let {\n      blockHash,\n      blockNumber\n    } = _ref;\n    let identifier = 'Block';\n    if (blockHash) identifier = `Block at hash \"${blockHash}\"`;\n    if (blockNumber) identifier = `Block at number \"${blockNumber}\"`;\n    super(`${identifier} could not be found.`);\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'BlockNotFoundError'\n    });\n  }\n}","map":{"version":3,"names":["BaseError","BlockNotFoundError","constructor","_ref","blockHash","blockNumber","identifier","Object","defineProperty"],"sources":["/Users/kanaiyuuta/Downloads/test-yuuta-main/node_modules/viem/errors/block.ts"],"sourcesContent":["import type { Hash } from '../types/misc.js'\n\nimport { BaseError } from './base.js'\n\nexport class BlockNotFoundError extends BaseError {\n  override name = 'BlockNotFoundError'\n  constructor({\n    blockHash,\n    blockNumber,\n  }: {\n    blockHash?: Hash\n    blockNumber?: bigint\n  }) {\n    let identifier = 'Block'\n    if (blockHash) identifier = `Block at hash \"${blockHash}\"`\n    if (blockNumber) identifier = `Block at number \"${blockNumber}\"`\n    super(`${identifier} could not be found.`)\n  }\n}\n"],"mappings":"AAEA,SAASA,SAAS,QAAQ,WAAW;AAErC,OAAM,MAAOC,kBAAmB,SAAQD,SAAS;EAE/CE,YAAAC,IAAA,EAMC;IAAA,IANW;MACVC,SAAS;MACTC;IAAW,CAIZ,GAAAF,IAAA;IACC,IAAIG,UAAU,GAAG,OAAO;IACxB,IAAIF,SAAS,EAAEE,UAAU,GAAG,kBAAkBF,SAAS,GAAG;IAC1D,IAAIC,WAAW,EAAEC,UAAU,GAAG,oBAAoBD,WAAW,GAAG;IAChE,KAAK,CAAC,GAAGC,UAAU,sBAAsB,CAAC;IAXnCC,MAAA,CAAAC,cAAA;;;;aAAO;;EAYhB"},"metadata":{},"sourceType":"module","externalDependencies":[]}