{"ast":null,"code":"import React from 'react';\nimport { selectWord } from '../utils/markdownUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var image = {\n  name: 'image',\n  keyCommand: 'image',\n  shortcuts: 'ctrlcmd+k',\n  value: '![image]({{text}})',\n  buttonProps: {\n    'aria-label': 'Add image (ctrl + k)',\n    title: 'Add image (ctrl + k)'\n  },\n  icon: /*#__PURE__*/_jsx(\"svg\", {\n    width: \"13\",\n    height: \"13\",\n    viewBox: \"0 0 20 20\",\n    children: /*#__PURE__*/_jsx(\"path\", {\n      fill: \"currentColor\",\n      d: \"M15 9c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm4-7H1c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 13l-6-5-2 2-4-5-4 8V4h16v11z\"\n    })\n  }),\n  execute: (state, api) => {\n    // Select everything\n    var newSelectionRange = selectWord({\n      text: state.text,\n      selection: state.selection\n    });\n    var state1 = api.setSelectionRange(newSelectionRange);\n    // Replaces the current selection with the image\n    var imageTemplate = state1.selectedText || 'https://example.com/your-image.png';\n    var val = state.command.value || '';\n    api.replaceSelection(val.replace(/({{text}})/gi, imageTemplate));\n    var start = state1.selection.start + val.indexOf('{{text}}');\n    var end = state1.selection.start + val.indexOf('{{text}}') + (state1.selection.end - state1.selection.start);\n    if (!state1.selectedText) {\n      end = end + imageTemplate.length;\n    }\n    api.setSelectionRange({\n      start,\n      end\n    });\n  }\n};","map":{"version":3,"names":["React","selectWord","jsx","_jsx","image","name","keyCommand","shortcuts","value","buttonProps","title","icon","width","height","viewBox","children","fill","d","execute","state","api","newSelectionRange","text","selection","state1","setSelectionRange","imageTemplate","selectedText","val","command","replaceSelection","replace","start","indexOf","end","length"],"sources":["/Users/kanaiyuuta/Downloads/test-yuuta-main/node_modules/@uiw/react-md-editor/esm/commands/image.js"],"sourcesContent":["import React from 'react';\nimport { selectWord } from '../utils/markdownUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var image = {\n  name: 'image',\n  keyCommand: 'image',\n  shortcuts: 'ctrlcmd+k',\n  value: '![image]({{text}})',\n  buttonProps: {\n    'aria-label': 'Add image (ctrl + k)',\n    title: 'Add image (ctrl + k)'\n  },\n  icon: /*#__PURE__*/_jsx(\"svg\", {\n    width: \"13\",\n    height: \"13\",\n    viewBox: \"0 0 20 20\",\n    children: /*#__PURE__*/_jsx(\"path\", {\n      fill: \"currentColor\",\n      d: \"M15 9c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm4-7H1c-.55 0-1 .45-1 1v14c0 .55.45 1 1 1h18c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 13l-6-5-2 2-4-5-4 8V4h16v11z\"\n    })\n  }),\n  execute: (state, api) => {\n    // Select everything\n    var newSelectionRange = selectWord({\n      text: state.text,\n      selection: state.selection\n    });\n    var state1 = api.setSelectionRange(newSelectionRange);\n    // Replaces the current selection with the image\n    var imageTemplate = state1.selectedText || 'https://example.com/your-image.png';\n    var val = state.command.value || '';\n    api.replaceSelection(val.replace(/({{text}})/gi, imageTemplate));\n    var start = state1.selection.start + val.indexOf('{{text}}');\n    var end = state1.selection.start + val.indexOf('{{text}}') + (state1.selection.end - state1.selection.start);\n    if (!state1.selectedText) {\n      end = end + imageTemplate.length;\n    }\n    api.setSelectionRange({\n      start,\n      end\n    });\n  }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,wBAAwB;AACnD,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,OAAO,IAAIC,KAAK,GAAG;EACjBC,IAAI,EAAE,OAAO;EACbC,UAAU,EAAE,OAAO;EACnBC,SAAS,EAAE,WAAW;EACtBC,KAAK,EAAE,oBAAoB;EAC3BC,WAAW,EAAE;IACX,YAAY,EAAE,sBAAsB;IACpCC,KAAK,EAAE;EACT,CAAC;EACDC,IAAI,EAAE,aAAaR,IAAI,CAAC,KAAK,EAAE;IAC7BS,KAAK,EAAE,IAAI;IACXC,MAAM,EAAE,IAAI;IACZC,OAAO,EAAE,WAAW;IACpBC,QAAQ,EAAE,aAAaZ,IAAI,CAAC,MAAM,EAAE;MAClCa,IAAI,EAAE,cAAc;MACpBC,CAAC,EAAE;IACL,CAAC;EACH,CAAC,CAAC;EACFC,OAAO,EAAEA,CAACC,KAAK,EAAEC,GAAG,KAAK;IACvB;IACA,IAAIC,iBAAiB,GAAGpB,UAAU,CAAC;MACjCqB,IAAI,EAAEH,KAAK,CAACG,IAAI;MAChBC,SAAS,EAAEJ,KAAK,CAACI;IACnB,CAAC,CAAC;IACF,IAAIC,MAAM,GAAGJ,GAAG,CAACK,iBAAiB,CAACJ,iBAAiB,CAAC;IACrD;IACA,IAAIK,aAAa,GAAGF,MAAM,CAACG,YAAY,IAAI,oCAAoC;IAC/E,IAAIC,GAAG,GAAGT,KAAK,CAACU,OAAO,CAACrB,KAAK,IAAI,EAAE;IACnCY,GAAG,CAACU,gBAAgB,CAACF,GAAG,CAACG,OAAO,CAAC,cAAc,EAAEL,aAAa,CAAC,CAAC;IAChE,IAAIM,KAAK,GAAGR,MAAM,CAACD,SAAS,CAACS,KAAK,GAAGJ,GAAG,CAACK,OAAO,CAAC,UAAU,CAAC;IAC5D,IAAIC,GAAG,GAAGV,MAAM,CAACD,SAAS,CAACS,KAAK,GAAGJ,GAAG,CAACK,OAAO,CAAC,UAAU,CAAC,IAAIT,MAAM,CAACD,SAAS,CAACW,GAAG,GAAGV,MAAM,CAACD,SAAS,CAACS,KAAK,CAAC;IAC5G,IAAI,CAACR,MAAM,CAACG,YAAY,EAAE;MACxBO,GAAG,GAAGA,GAAG,GAAGR,aAAa,CAACS,MAAM;IAClC;IACAf,GAAG,CAACK,iBAAiB,CAAC;MACpBO,KAAK;MACLE;IACF,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}