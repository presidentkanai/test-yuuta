{"ast":null,"code":"/**\n * Sets the automatic mining interval (in seconds) of blocks. Setting the interval to 0 will disable automatic mining.\n *\n * - Docs: https://viem.sh/docs/actions/test/setIntervalMining.html\n *\n * @param client - Client to use\n * @param parameters – {@link SetIntervalMiningParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setIntervalMining } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setIntervalMining(client, { interval: 5 })\n */\nexport async function setIntervalMining(client, _ref) {\n  let {\n    interval\n  } = _ref;\n  await client.request({\n    method: 'evm_setIntervalMining',\n    params: [interval]\n  });\n}","map":{"version":3,"names":["setIntervalMining","client","_ref","interval","request","method","params"],"sources":["/Users/kanaiyuuta/Downloads/test-yuuta-main/node_modules/viem/actions/test/setIntervalMining.ts"],"sourcesContent":["import type {\n  TestClient,\n  TestClientMode,\n} from '../../clients/createTestClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Account } from '../../types/account.js'\nimport type { Chain } from '../../types/chain.js'\n\nexport type SetIntervalMiningParameters = {\n  /** The mining interval. */\n  interval: number\n}\n\n/**\n * Sets the automatic mining interval (in seconds) of blocks. Setting the interval to 0 will disable automatic mining.\n *\n * - Docs: https://viem.sh/docs/actions/test/setIntervalMining.html\n *\n * @param client - Client to use\n * @param parameters – {@link SetIntervalMiningParameters}\n *\n * @example\n * import { createTestClient, http } from 'viem'\n * import { foundry } from 'viem/chains'\n * import { setIntervalMining } from 'viem/test'\n *\n * const client = createTestClient({\n *   mode: 'anvil',\n *   chain: 'foundry',\n *   transport: http(),\n * })\n * await setIntervalMining(client, { interval: 5 })\n */\nexport async function setIntervalMining<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined,\n>(\n  client: TestClient<TestClientMode, Transport, TChain, TAccount, false>,\n  { interval }: SetIntervalMiningParameters,\n) {\n  await client.request({\n    method: 'evm_setIntervalMining',\n    params: [interval],\n  })\n}\n"],"mappings":"AAaA;;;;;;;;;;;;;;;;;;;;AAoBA,OAAO,eAAeA,iBAAiBA,CAIrCC,MAAsE,EAAAC,IAAA,EAC7B;EAAA,IAAzC;IAAEC;EAAQ,CAA+B,GAAAD,IAAA;EAEzC,MAAMD,MAAM,CAACG,OAAO,CAAC;IACnBC,MAAM,EAAE,uBAAuB;IAC/BC,MAAM,EAAE,CAACH,QAAQ;GAClB,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}