{"ast":null,"code":"import { AbiErrorInputsNotFoundError, AbiErrorNotFoundError } from '../../errors/abi.js';\nimport { concatHex } from '../data/concat.js';\nimport { getFunctionSelector } from '../hash/getFunctionSelector.js';\nimport { encodeAbiParameters } from './encodeAbiParameters.js';\nimport { formatAbiItem } from './formatAbiItem.js';\nimport { getAbiItem } from './getAbiItem.js';\nconst docsPath = '/docs/contract/encodeErrorResult';\nexport function encodeErrorResult(_ref) {\n  let {\n    abi,\n    errorName,\n    args\n  } = _ref;\n  let abiItem = abi[0];\n  if (errorName) {\n    abiItem = getAbiItem({\n      abi,\n      args,\n      name: errorName\n    });\n    if (!abiItem) throw new AbiErrorNotFoundError(errorName, {\n      docsPath\n    });\n  }\n  if (abiItem.type !== 'error') throw new AbiErrorNotFoundError(undefined, {\n    docsPath\n  });\n  const definition = formatAbiItem(abiItem);\n  const signature = getFunctionSelector(definition);\n  let data = '0x';\n  if (args && args.length > 0) {\n    if (!abiItem.inputs) throw new AbiErrorInputsNotFoundError(abiItem.name, {\n      docsPath\n    });\n    data = encodeAbiParameters(abiItem.inputs, args);\n  }\n  return concatHex([signature, data]);\n}","map":{"version":3,"names":["AbiErrorInputsNotFoundError","AbiErrorNotFoundError","concatHex","getFunctionSelector","encodeAbiParameters","formatAbiItem","getAbiItem","docsPath","encodeErrorResult","_ref","abi","errorName","args","abiItem","name","type","undefined","definition","signature","data","length","inputs"],"sources":["/Users/kanaiyuuta/Downloads/test-yuuta-main/node_modules/viem/utils/abi/encodeErrorResult.ts"],"sourcesContent":["import type { Abi } from 'abitype'\n\nimport {\n  AbiErrorInputsNotFoundError,\n  AbiErrorNotFoundError,\n} from '../../errors/abi.js'\nimport type {\n  AbiItem,\n  GetErrorArgs,\n  InferErrorName,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport { concatHex } from '../data/concat.js'\nimport { getFunctionSelector } from '../hash/getFunctionSelector.js'\n\nimport { encodeAbiParameters } from './encodeAbiParameters.js'\nimport { formatAbiItem } from './formatAbiItem.js'\nimport { type GetAbiItemParameters, getAbiItem } from './getAbiItem.js'\n\nconst docsPath = '/docs/contract/encodeErrorResult'\n\nexport type EncodeErrorResultParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TErrorName extends string | undefined = string,\n  _ErrorName = InferErrorName<TAbi, TErrorName>,\n> = {\n  errorName?: _ErrorName\n} & (TErrorName extends string\n  ? { abi: TAbi } & GetErrorArgs<TAbi, TErrorName>\n  : _ErrorName extends string\n  ? { abi: [TAbi[number]] } & GetErrorArgs<TAbi, _ErrorName>\n  : never)\n\nexport function encodeErrorResult<\n  const TAbi extends Abi | readonly unknown[],\n  TErrorName extends string | undefined = undefined,\n>({ abi, errorName, args }: EncodeErrorResultParameters<TAbi, TErrorName>) {\n  let abiItem = abi[0] as AbiItem\n  if (errorName) {\n    abiItem = getAbiItem({\n      abi,\n      args,\n      name: errorName,\n    } as GetAbiItemParameters)\n    if (!abiItem) throw new AbiErrorNotFoundError(errorName, { docsPath })\n  }\n\n  if (abiItem.type !== 'error')\n    throw new AbiErrorNotFoundError(undefined, { docsPath })\n\n  const definition = formatAbiItem(abiItem)\n  const signature = getFunctionSelector(definition)\n\n  let data: Hex = '0x'\n  if (args && (args as readonly unknown[]).length > 0) {\n    if (!abiItem.inputs)\n      throw new AbiErrorInputsNotFoundError(abiItem.name, { docsPath })\n    data = encodeAbiParameters(abiItem.inputs, args as readonly unknown[])\n  }\n  return concatHex([signature, data])\n}\n"],"mappings":"AAEA,SACEA,2BAA2B,EAC3BC,qBAAqB,QAChB,qBAAqB;AAO5B,SAASC,SAAS,QAAQ,mBAAmB;AAC7C,SAASC,mBAAmB,QAAQ,gCAAgC;AAEpE,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAAoCC,UAAU,QAAQ,iBAAiB;AAEvE,MAAMC,QAAQ,GAAG,kCAAkC;AAcnD,OAAM,SAAUC,iBAAiBA,CAAAC,IAAA,EAGwC;EAAA,IAAvE;IAAEC,GAAG;IAAEC,SAAS;IAAEC;EAAI,CAAiD,GAAAH,IAAA;EACvE,IAAII,OAAO,GAAGH,GAAG,CAAC,CAAC,CAAY;EAC/B,IAAIC,SAAS,EAAE;IACbE,OAAO,GAAGP,UAAU,CAAC;MACnBI,GAAG;MACHE,IAAI;MACJE,IAAI,EAAEH;KACiB,CAAC;IAC1B,IAAI,CAACE,OAAO,EAAE,MAAM,IAAIZ,qBAAqB,CAACU,SAAS,EAAE;MAAEJ;IAAQ,CAAE,CAAC;;EAGxE,IAAIM,OAAO,CAACE,IAAI,KAAK,OAAO,EAC1B,MAAM,IAAId,qBAAqB,CAACe,SAAS,EAAE;IAAET;EAAQ,CAAE,CAAC;EAE1D,MAAMU,UAAU,GAAGZ,aAAa,CAACQ,OAAO,CAAC;EACzC,MAAMK,SAAS,GAAGf,mBAAmB,CAACc,UAAU,CAAC;EAEjD,IAAIE,IAAI,GAAQ,IAAI;EACpB,IAAIP,IAAI,IAAKA,IAA2B,CAACQ,MAAM,GAAG,CAAC,EAAE;IACnD,IAAI,CAACP,OAAO,CAACQ,MAAM,EACjB,MAAM,IAAIrB,2BAA2B,CAACa,OAAO,CAACC,IAAI,EAAE;MAAEP;IAAQ,CAAE,CAAC;IACnEY,IAAI,GAAGf,mBAAmB,CAACS,OAAO,CAACQ,MAAM,EAAET,IAA0B,CAAC;;EAExE,OAAOV,SAAS,CAAC,CAACgB,SAAS,EAAEC,IAAI,CAAC,CAAC;AACrC"},"metadata":{},"sourceType":"module","externalDependencies":[]}