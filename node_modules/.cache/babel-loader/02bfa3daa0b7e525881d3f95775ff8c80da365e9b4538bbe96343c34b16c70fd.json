{"ast":null,"code":"import { publicKeyToAddress } from '../../accounts/utils/publicKeyToAddress.js';\nimport { recoverPublicKey } from './recoverPublicKey.js';\nexport async function recoverAddress(_ref) {\n  let {\n    hash,\n    signature\n  } = _ref;\n  return publicKeyToAddress(await recoverPublicKey({\n    hash: hash,\n    signature\n  }));\n}","map":{"version":3,"names":["publicKeyToAddress","recoverPublicKey","recoverAddress","_ref","hash","signature"],"sources":["/Users/kanaiyuuta/Downloads/test-yuuta-main/node_modules/viem/utils/signature/recoverAddress.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport { publicKeyToAddress } from '../../accounts/utils/publicKeyToAddress.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\nimport { recoverPublicKey } from './recoverPublicKey.js'\n\nexport type RecoverAddressParameters = {\n  hash: Hex | ByteArray\n  signature: Hex | ByteArray\n}\nexport type RecoverAddressReturnType = Address\n\nexport async function recoverAddress({\n  hash,\n  signature,\n}: RecoverAddressParameters): Promise<RecoverAddressReturnType> {\n  return publicKeyToAddress(await recoverPublicKey({ hash: hash, signature }))\n}\n"],"mappings":"AAEA,SAASA,kBAAkB,QAAQ,4CAA4C;AAG/E,SAASC,gBAAgB,QAAQ,uBAAuB;AAQxD,OAAO,eAAeC,cAAcA,CAAAC,IAAA,EAGT;EAAA,IAHU;IACnCC,IAAI;IACJC;EAAS,CACgB,GAAAF,IAAA;EACzB,OAAOH,kBAAkB,CAAC,MAAMC,gBAAgB,CAAC;IAAEG,IAAI,EAAEA,IAAI;IAAEC;EAAS,CAAE,CAAC,CAAC;AAC9E"},"metadata":{},"sourceType":"module","externalDependencies":[]}