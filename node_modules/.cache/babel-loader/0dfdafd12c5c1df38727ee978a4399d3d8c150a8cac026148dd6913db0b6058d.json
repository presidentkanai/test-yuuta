{"ast":null,"code":"import { buildRequest } from '../../utils/buildRequest.js';\n/**\n * @description Creates an transport intended to be used with a client.\n */\nexport function createTransport(_ref, value) {\n  let {\n    key,\n    name,\n    request,\n    retryCount = 3,\n    retryDelay = 150,\n    timeout,\n    type\n  } = _ref;\n  return {\n    config: {\n      key,\n      name,\n      request,\n      retryCount,\n      retryDelay,\n      timeout,\n      type\n    },\n    request: buildRequest(request, {\n      retryCount,\n      retryDelay\n    }),\n    value\n  };\n}","map":{"version":3,"names":["buildRequest","createTransport","_ref","value","key","name","request","retryCount","retryDelay","timeout","type","config"],"sources":["/Users/kanaiyuuta/Downloads/test-yuuta-main/node_modules/viem/clients/transports/createTransport.ts"],"sourcesContent":["import type { Chain } from '../../types/chain.js'\nimport type { EIP1193RequestFn } from '../../types/eip1193.js'\nimport { buildRequest } from '../../utils/buildRequest.js'\nimport type { ClientConfig } from '../createClient.js'\n\nexport type TransportConfig<\n  TType extends string = string,\n  TEIP1193RequestFn extends EIP1193RequestFn = EIP1193RequestFn,\n> = {\n  /** The name of the transport. */\n  name: string\n  /** The key of the transport. */\n  key: string\n  /** The JSON-RPC request function that matches the EIP-1193 request spec. */\n  request: TEIP1193RequestFn\n  /** The base delay (in ms) between retries. */\n  retryDelay?: number\n  /** The max number of times to retry. */\n  retryCount?: number\n  /** The timeout (in ms) for requests. */\n  timeout?: number\n  /** The type of the transport. */\n  type: TType\n}\n\nexport type Transport<\n  TType extends string = string,\n  TRpcAttributes = Record<string, any>,\n  TEIP1193RequestFn extends EIP1193RequestFn = EIP1193RequestFn,\n> = <TChain extends Chain | undefined = Chain>({\n  chain,\n}: {\n  chain?: TChain\n  pollingInterval?: ClientConfig['pollingInterval']\n  retryCount?: TransportConfig['retryCount']\n  timeout?: TransportConfig['timeout']\n}) => {\n  config: TransportConfig<TType>\n  request: TEIP1193RequestFn\n  value?: TRpcAttributes\n}\n\n/**\n * @description Creates an transport intended to be used with a client.\n */\nexport function createTransport<\n  TType extends string,\n  TRpcAttributes extends Record<string, any>,\n>(\n  {\n    key,\n    name,\n    request,\n    retryCount = 3,\n    retryDelay = 150,\n    timeout,\n    type,\n  }: TransportConfig<TType>,\n  value?: TRpcAttributes,\n): ReturnType<Transport<TType, TRpcAttributes>> {\n  return {\n    config: { key, name, request, retryCount, retryDelay, timeout, type },\n    request: buildRequest(request, { retryCount, retryDelay }),\n    value,\n  }\n}\n"],"mappings":"AAEA,SAASA,YAAY,QAAQ,6BAA6B;AAwC1D;;;AAGA,OAAM,SAAUC,eAAeA,CAAAC,IAAA,EAa7BC,KAAsB;EAAA,IATtB;IACEC,GAAG;IACHC,IAAI;IACJC,OAAO;IACPC,UAAU,GAAG,CAAC;IACdC,UAAU,GAAG,GAAG;IAChBC,OAAO;IACPC;EAAI,CACmB,GAAAR,IAAA;EAGzB,OAAO;IACLS,MAAM,EAAE;MAAEP,GAAG;MAAEC,IAAI;MAAEC,OAAO;MAAEC,UAAU;MAAEC,UAAU;MAAEC,OAAO;MAAEC;IAAI,CAAE;IACrEJ,OAAO,EAAEN,YAAY,CAACM,OAAO,EAAE;MAAEC,UAAU;MAAEC;IAAU,CAAE,CAAC;IAC1DL;GACD;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}