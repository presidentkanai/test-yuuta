{"ast":null,"code":"import { InvalidAddressError } from '../../errors/address.js';\nimport { BaseError } from '../../errors/base.js';\nimport { InvalidChainIdError } from '../../errors/chain.js';\nimport { FeeCapTooHighError, TipAboveFeeCapError } from '../../errors/node.js';\nimport { isAddress } from '../address/isAddress.js';\nexport function assertTransactionEIP1559(transaction) {\n  const {\n    chainId,\n    maxPriorityFeePerGas,\n    gasPrice,\n    maxFeePerGas,\n    to\n  } = transaction;\n  if (chainId <= 0) throw new InvalidChainIdError({\n    chainId\n  });\n  if (to && !isAddress(to)) throw new InvalidAddressError({\n    address: to\n  });\n  if (gasPrice) throw new BaseError('`gasPrice` is not a valid EIP-1559 Transaction attribute.');\n  if (maxFeePerGas && maxFeePerGas > 2n ** 256n - 1n) throw new FeeCapTooHighError({\n    maxFeePerGas\n  });\n  if (maxPriorityFeePerGas && maxFeePerGas && maxPriorityFeePerGas > maxFeePerGas) throw new TipAboveFeeCapError({\n    maxFeePerGas,\n    maxPriorityFeePerGas\n  });\n}\nexport function assertTransactionEIP2930(transaction) {\n  const {\n    chainId,\n    maxPriorityFeePerGas,\n    gasPrice,\n    maxFeePerGas,\n    to\n  } = transaction;\n  if (chainId <= 0) throw new InvalidChainIdError({\n    chainId\n  });\n  if (to && !isAddress(to)) throw new InvalidAddressError({\n    address: to\n  });\n  if (maxPriorityFeePerGas || maxFeePerGas) throw new BaseError('`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid EIP-2930 Transaction attribute.');\n  if (gasPrice && gasPrice > 2n ** 256n - 1n) throw new FeeCapTooHighError({\n    maxFeePerGas: gasPrice\n  });\n}\nexport function assertTransactionLegacy(transaction) {\n  const {\n    chainId,\n    maxPriorityFeePerGas,\n    gasPrice,\n    maxFeePerGas,\n    to,\n    accessList\n  } = transaction;\n  if (to && !isAddress(to)) throw new InvalidAddressError({\n    address: to\n  });\n  if (typeof chainId !== 'undefined' && chainId <= 0) throw new InvalidChainIdError({\n    chainId\n  });\n  if (maxPriorityFeePerGas || maxFeePerGas) throw new BaseError('`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid Legacy Transaction attribute.');\n  if (gasPrice && gasPrice > 2n ** 256n - 1n) throw new FeeCapTooHighError({\n    maxFeePerGas: gasPrice\n  });\n  if (accessList) throw new BaseError('`accessList` is not a valid Legacy Transaction attribute.');\n}","map":{"version":3,"names":["InvalidAddressError","BaseError","InvalidChainIdError","FeeCapTooHighError","TipAboveFeeCapError","isAddress","assertTransactionEIP1559","transaction","chainId","maxPriorityFeePerGas","gasPrice","maxFeePerGas","to","address","assertTransactionEIP2930","assertTransactionLegacy","accessList"],"sources":["/Users/kanaiyuuta/Downloads/test-yuuta-main/node_modules/viem/utils/transaction/assertTransaction.ts"],"sourcesContent":["import { InvalidAddressError } from '../../errors/address.js'\nimport { BaseError } from '../../errors/base.js'\nimport { InvalidChainIdError } from '../../errors/chain.js'\nimport { FeeCapTooHighError, TipAboveFeeCapError } from '../../errors/node.js'\nimport type {\n  TransactionSerializableEIP1559,\n  TransactionSerializableEIP2930,\n  TransactionSerializableLegacy,\n} from '../../types/transaction.js'\nimport { isAddress } from '../address/isAddress.js'\n\nexport function assertTransactionEIP1559(\n  transaction: TransactionSerializableEIP1559,\n) {\n  const { chainId, maxPriorityFeePerGas, gasPrice, maxFeePerGas, to } =\n    transaction\n  if (chainId <= 0) throw new InvalidChainIdError({ chainId })\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (gasPrice)\n    throw new BaseError(\n      '`gasPrice` is not a valid EIP-1559 Transaction attribute.',\n    )\n  if (maxFeePerGas && maxFeePerGas > 2n ** 256n - 1n)\n    throw new FeeCapTooHighError({ maxFeePerGas })\n  if (\n    maxPriorityFeePerGas &&\n    maxFeePerGas &&\n    maxPriorityFeePerGas > maxFeePerGas\n  )\n    throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas })\n}\n\nexport function assertTransactionEIP2930(\n  transaction: TransactionSerializableEIP2930,\n) {\n  const { chainId, maxPriorityFeePerGas, gasPrice, maxFeePerGas, to } =\n    transaction\n  if (chainId <= 0) throw new InvalidChainIdError({ chainId })\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (maxPriorityFeePerGas || maxFeePerGas)\n    throw new BaseError(\n      '`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid EIP-2930 Transaction attribute.',\n    )\n  if (gasPrice && gasPrice > 2n ** 256n - 1n)\n    throw new FeeCapTooHighError({ maxFeePerGas: gasPrice })\n}\n\nexport function assertTransactionLegacy(\n  transaction: TransactionSerializableLegacy,\n) {\n  const {\n    chainId,\n    maxPriorityFeePerGas,\n    gasPrice,\n    maxFeePerGas,\n    to,\n    accessList,\n  } = transaction\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (typeof chainId !== 'undefined' && chainId <= 0)\n    throw new InvalidChainIdError({ chainId })\n  if (maxPriorityFeePerGas || maxFeePerGas)\n    throw new BaseError(\n      '`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid Legacy Transaction attribute.',\n    )\n  if (gasPrice && gasPrice > 2n ** 256n - 1n)\n    throw new FeeCapTooHighError({ maxFeePerGas: gasPrice })\n  if (accessList)\n    throw new BaseError(\n      '`accessList` is not a valid Legacy Transaction attribute.',\n    )\n}\n"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,yBAAyB;AAC7D,SAASC,SAAS,QAAQ,sBAAsB;AAChD,SAASC,mBAAmB,QAAQ,uBAAuB;AAC3D,SAASC,kBAAkB,EAAEC,mBAAmB,QAAQ,sBAAsB;AAM9E,SAASC,SAAS,QAAQ,yBAAyB;AAEnD,OAAM,SAAUC,wBAAwBA,CACtCC,WAA2C;EAE3C,MAAM;IAAEC,OAAO;IAAEC,oBAAoB;IAAEC,QAAQ;IAAEC,YAAY;IAAEC;EAAE,CAAE,GACjEL,WAAW;EACb,IAAIC,OAAO,IAAI,CAAC,EAAE,MAAM,IAAIN,mBAAmB,CAAC;IAAEM;EAAO,CAAE,CAAC;EAC5D,IAAII,EAAE,IAAI,CAACP,SAAS,CAACO,EAAE,CAAC,EAAE,MAAM,IAAIZ,mBAAmB,CAAC;IAAEa,OAAO,EAAED;EAAE,CAAE,CAAC;EACxE,IAAIF,QAAQ,EACV,MAAM,IAAIT,SAAS,CACjB,2DAA2D,CAC5D;EACH,IAAIU,YAAY,IAAIA,YAAY,GAAG,EAAE,IAAI,IAAI,GAAG,EAAE,EAChD,MAAM,IAAIR,kBAAkB,CAAC;IAAEQ;EAAY,CAAE,CAAC;EAChD,IACEF,oBAAoB,IACpBE,YAAY,IACZF,oBAAoB,GAAGE,YAAY,EAEnC,MAAM,IAAIP,mBAAmB,CAAC;IAAEO,YAAY;IAAEF;EAAoB,CAAE,CAAC;AACzE;AAEA,OAAM,SAAUK,wBAAwBA,CACtCP,WAA2C;EAE3C,MAAM;IAAEC,OAAO;IAAEC,oBAAoB;IAAEC,QAAQ;IAAEC,YAAY;IAAEC;EAAE,CAAE,GACjEL,WAAW;EACb,IAAIC,OAAO,IAAI,CAAC,EAAE,MAAM,IAAIN,mBAAmB,CAAC;IAAEM;EAAO,CAAE,CAAC;EAC5D,IAAII,EAAE,IAAI,CAACP,SAAS,CAACO,EAAE,CAAC,EAAE,MAAM,IAAIZ,mBAAmB,CAAC;IAAEa,OAAO,EAAED;EAAE,CAAE,CAAC;EACxE,IAAIH,oBAAoB,IAAIE,YAAY,EACtC,MAAM,IAAIV,SAAS,CACjB,sFAAsF,CACvF;EACH,IAAIS,QAAQ,IAAIA,QAAQ,GAAG,EAAE,IAAI,IAAI,GAAG,EAAE,EACxC,MAAM,IAAIP,kBAAkB,CAAC;IAAEQ,YAAY,EAAED;EAAQ,CAAE,CAAC;AAC5D;AAEA,OAAM,SAAUK,uBAAuBA,CACrCR,WAA0C;EAE1C,MAAM;IACJC,OAAO;IACPC,oBAAoB;IACpBC,QAAQ;IACRC,YAAY;IACZC,EAAE;IACFI;EAAU,CACX,GAAGT,WAAW;EACf,IAAIK,EAAE,IAAI,CAACP,SAAS,CAACO,EAAE,CAAC,EAAE,MAAM,IAAIZ,mBAAmB,CAAC;IAAEa,OAAO,EAAED;EAAE,CAAE,CAAC;EACxE,IAAI,OAAOJ,OAAO,KAAK,WAAW,IAAIA,OAAO,IAAI,CAAC,EAChD,MAAM,IAAIN,mBAAmB,CAAC;IAAEM;EAAO,CAAE,CAAC;EAC5C,IAAIC,oBAAoB,IAAIE,YAAY,EACtC,MAAM,IAAIV,SAAS,CACjB,oFAAoF,CACrF;EACH,IAAIS,QAAQ,IAAIA,QAAQ,GAAG,EAAE,IAAI,IAAI,GAAG,EAAE,EACxC,MAAM,IAAIP,kBAAkB,CAAC;IAAEQ,YAAY,EAAED;EAAQ,CAAE,CAAC;EAC1D,IAAIM,UAAU,EACZ,MAAM,IAAIf,SAAS,CACjB,2DAA2D,CAC5D;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}