{"ast":null,"code":"/* [Multicall3](https://github.com/mds1/multicall) */\nexport const multicall3Abi = [{\n  inputs: [{\n    components: [{\n      name: 'target',\n      type: 'address'\n    }, {\n      name: 'allowFailure',\n      type: 'bool'\n    }, {\n      name: 'callData',\n      type: 'bytes'\n    }],\n    name: 'calls',\n    type: 'tuple[]'\n  }],\n  name: 'aggregate3',\n  outputs: [{\n    components: [{\n      name: 'success',\n      type: 'bool'\n    }, {\n      name: 'returnData',\n      type: 'bytes'\n    }],\n    name: 'returnData',\n    type: 'tuple[]'\n  }],\n  stateMutability: 'view',\n  type: 'function'\n}];\nconst universalResolverErrors = [{\n  inputs: [],\n  name: 'ResolverNotFound',\n  type: 'error'\n}, {\n  inputs: [],\n  name: 'ResolverWildcardNotSupported',\n  type: 'error'\n}];\nexport const universalResolverResolveAbi = [...universalResolverErrors, {\n  name: 'resolve',\n  type: 'function',\n  stateMutability: 'view',\n  inputs: [{\n    name: 'name',\n    type: 'bytes'\n  }, {\n    name: 'data',\n    type: 'bytes'\n  }],\n  outputs: [{\n    name: '',\n    type: 'bytes'\n  }, {\n    name: 'address',\n    type: 'address'\n  }]\n}];\nexport const universalResolverReverseAbi = [...universalResolverErrors, {\n  name: 'reverse',\n  type: 'function',\n  stateMutability: 'view',\n  inputs: [{\n    type: 'bytes',\n    name: 'reverseName'\n  }],\n  outputs: [{\n    type: 'string',\n    name: 'resolvedName'\n  }, {\n    type: 'address',\n    name: 'resolvedAddress'\n  }, {\n    type: 'address',\n    name: 'reverseResolver'\n  }, {\n    type: 'address',\n    name: 'resolver'\n  }]\n}];\nexport const textResolverAbi = [{\n  name: 'text',\n  type: 'function',\n  stateMutability: 'view',\n  inputs: [{\n    name: 'name',\n    type: 'bytes32'\n  }, {\n    name: 'key',\n    type: 'string'\n  }],\n  outputs: [{\n    name: '',\n    type: 'string'\n  }]\n}];\nexport const addressResolverAbi = [{\n  name: 'addr',\n  type: 'function',\n  stateMutability: 'view',\n  inputs: [{\n    name: 'name',\n    type: 'bytes32'\n  }],\n  outputs: [{\n    name: '',\n    type: 'address'\n  }]\n}, {\n  name: 'addr',\n  type: 'function',\n  stateMutability: 'view',\n  inputs: [{\n    name: 'name',\n    type: 'bytes32'\n  }, {\n    name: 'coinType',\n    type: 'uint256'\n  }],\n  outputs: [{\n    name: '',\n    type: 'bytes'\n  }]\n}];\n// ERC-1271\n// isValidSignature(bytes32 hash, bytes signature) → bytes4 magicValue\nexport const smartAccountAbi = [{\n  name: 'isValidSignature',\n  type: 'function',\n  stateMutability: 'view',\n  inputs: [{\n    name: 'hash',\n    type: 'bytes32'\n  }, {\n    name: 'signature',\n    type: 'bytes'\n  }],\n  outputs: [{\n    name: '',\n    type: 'bytes4'\n  }]\n}];\n// ERC-6492 - universal deployless signature validator contract\n// constructor(address _signer, bytes32 _hash, bytes _signature) → bytes4 returnValue\n// returnValue is either 0x1 (valid) or 0x0 (invalid)\nexport const universalSignatureValidatorAbi = [{\n  inputs: [{\n    internalType: 'address',\n    name: '_signer',\n    type: 'address'\n  }, {\n    internalType: 'bytes32',\n    name: '_hash',\n    type: 'bytes32'\n  }, {\n    internalType: 'bytes',\n    name: '_signature',\n    type: 'bytes'\n  }],\n  stateMutability: 'nonpayable',\n  type: 'constructor'\n}];","map":{"version":3,"names":["multicall3Abi","inputs","components","name","type","outputs","stateMutability","universalResolverErrors","universalResolverResolveAbi","universalResolverReverseAbi","textResolverAbi","addressResolverAbi","smartAccountAbi","universalSignatureValidatorAbi","internalType"],"sources":["/Users/kanaiyuuta/Downloads/test-yuuta-main/node_modules/viem/constants/abis.ts"],"sourcesContent":["/* [Multicall3](https://github.com/mds1/multicall) */\nexport const multicall3Abi = [\n  {\n    inputs: [\n      {\n        components: [\n          {\n            name: 'target',\n            type: 'address',\n          },\n          {\n            name: 'allowFailure',\n            type: 'bool',\n          },\n          {\n            name: 'callData',\n            type: 'bytes',\n          },\n        ],\n        name: 'calls',\n        type: 'tuple[]',\n      },\n    ],\n    name: 'aggregate3',\n    outputs: [\n      {\n        components: [\n          {\n            name: 'success',\n            type: 'bool',\n          },\n          {\n            name: 'returnData',\n            type: 'bytes',\n          },\n        ],\n        name: 'returnData',\n        type: 'tuple[]',\n      },\n    ],\n    stateMutability: 'view',\n    type: 'function',\n  },\n] as const\n\nconst universalResolverErrors = [\n  {\n    inputs: [],\n    name: 'ResolverNotFound',\n    type: 'error',\n  },\n  {\n    inputs: [],\n    name: 'ResolverWildcardNotSupported',\n    type: 'error',\n  },\n] as const\n\nexport const universalResolverResolveAbi = [\n  ...universalResolverErrors,\n  {\n    name: 'resolve',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { name: 'name', type: 'bytes' },\n      { name: 'data', type: 'bytes' },\n    ],\n    outputs: [\n      { name: '', type: 'bytes' },\n      { name: 'address', type: 'address' },\n    ],\n  },\n] as const\n\nexport const universalResolverReverseAbi = [\n  ...universalResolverErrors,\n  {\n    name: 'reverse',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [{ type: 'bytes', name: 'reverseName' }],\n    outputs: [\n      { type: 'string', name: 'resolvedName' },\n      { type: 'address', name: 'resolvedAddress' },\n      { type: 'address', name: 'reverseResolver' },\n      { type: 'address', name: 'resolver' },\n    ],\n  },\n] as const\n\nexport const textResolverAbi = [\n  {\n    name: 'text',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { name: 'name', type: 'bytes32' },\n      { name: 'key', type: 'string' },\n    ],\n    outputs: [{ name: '', type: 'string' }],\n  },\n] as const\n\nexport const addressResolverAbi = [\n  {\n    name: 'addr',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [{ name: 'name', type: 'bytes32' }],\n    outputs: [{ name: '', type: 'address' }],\n  },\n  {\n    name: 'addr',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { name: 'name', type: 'bytes32' },\n      { name: 'coinType', type: 'uint256' },\n    ],\n    outputs: [{ name: '', type: 'bytes' }],\n  },\n] as const\n\n// ERC-1271\n// isValidSignature(bytes32 hash, bytes signature) → bytes4 magicValue\nexport const smartAccountAbi = [\n  {\n    name: 'isValidSignature',\n    type: 'function',\n    stateMutability: 'view',\n    inputs: [\n      { name: 'hash', type: 'bytes32' },\n      { name: 'signature', type: 'bytes' },\n    ],\n    outputs: [{ name: '', type: 'bytes4' }],\n  },\n] as const\n\n// ERC-6492 - universal deployless signature validator contract\n// constructor(address _signer, bytes32 _hash, bytes _signature) → bytes4 returnValue\n// returnValue is either 0x1 (valid) or 0x0 (invalid)\nexport const universalSignatureValidatorAbi = [\n  {\n    inputs: [\n      {\n        internalType: 'address',\n        name: '_signer',\n        type: 'address',\n      },\n      {\n        internalType: 'bytes32',\n        name: '_hash',\n        type: 'bytes32',\n      },\n      {\n        internalType: 'bytes',\n        name: '_signature',\n        type: 'bytes',\n      },\n    ],\n    stateMutability: 'nonpayable',\n    type: 'constructor',\n  },\n] as const\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}