{"ast":null,"code":"import { checksumAddress } from '../../utils/address/getAddress.js';\n/**\n * Returns a list of account addresses owned by the wallet or client.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/getAddresses.html\n * - JSON-RPC Methods: [`eth_accounts`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_accounts)\n *\n * @param client - Client to use\n * @returns List of account addresses owned by the wallet or client. {@link GetAddressesReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getAddresses } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const accounts = await getAddresses(client)\n */\nexport async function getAddresses(client) {\n  const addresses = await client.request({\n    method: 'eth_accounts'\n  });\n  return addresses.map(address => checksumAddress(address));\n}","map":{"version":3,"names":["checksumAddress","getAddresses","client","addresses","request","method","map","address"],"sources":["/Users/kanaiyuuta/Downloads/test-yuuta-main/node_modules/viem/actions/wallet/getAddresses.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { Account } from '../../accounts/types.js'\nimport type { Client } from '../../clients/createClient.js'\nimport type { Transport } from '../../clients/transports/createTransport.js'\nimport type { Chain } from '../../types/chain.js'\nimport { checksumAddress } from '../../utils/address/getAddress.js'\n\nexport type GetAddressesReturnType = Address[]\n\n/**\n * Returns a list of account addresses owned by the wallet or client.\n *\n * - Docs: https://viem.sh/docs/actions/wallet/getAddresses.html\n * - JSON-RPC Methods: [`eth_accounts`](https://ethereum.org/en/developers/docs/apis/json-rpc/#eth_accounts)\n *\n * @param client - Client to use\n * @returns List of account addresses owned by the wallet or client. {@link GetAddressesReturnType}\n *\n * @example\n * import { createWalletClient, custom } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getAddresses } from 'viem/wallet'\n *\n * const client = createWalletClient({\n *   chain: mainnet,\n *   transport: custom(window.ethereum),\n * })\n * const accounts = await getAddresses(client)\n */\nexport async function getAddresses<\n  TChain extends Chain | undefined,\n  TAccount extends Account | undefined = undefined,\n>(\n  client: Client<Transport, TChain, TAccount>,\n): Promise<GetAddressesReturnType> {\n  const addresses = await client.request({ method: 'eth_accounts' })\n  return addresses.map((address) => checksumAddress(address))\n}\n"],"mappings":"AAMA,SAASA,eAAe,QAAQ,mCAAmC;AAInE;;;;;;;;;;;;;;;;;;;;AAoBA,OAAO,eAAeC,YAAYA,CAIhCC,MAA2C;EAE3C,MAAMC,SAAS,GAAG,MAAMD,MAAM,CAACE,OAAO,CAAC;IAAEC,MAAM,EAAE;EAAc,CAAE,CAAC;EAClE,OAAOF,SAAS,CAACG,GAAG,CAAEC,OAAO,IAAKP,eAAe,CAACO,OAAO,CAAC,CAAC;AAC7D"},"metadata":{},"sourceType":"module","externalDependencies":[]}