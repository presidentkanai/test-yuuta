{"ast":null,"code":"import { BaseError } from '../../errors/base.js';\nimport { ExecutionRevertedError, FeeCapTooHighError, FeeCapTooLowError, InsufficientFundsError, IntrinsicGasTooHighError, IntrinsicGasTooLowError, NonceMaxValueError, NonceTooHighError, NonceTooLowError, TipAboveFeeCapError, TransactionTypeNotSupportedError, UnknownNodeError } from '../../errors/node.js';\nimport { RpcRequestError } from '../../errors/request.js';\nimport { InvalidInputRpcError, TransactionRejectedRpcError } from '../../errors/rpc.js';\nexport function containsNodeError(err) {\n  return err instanceof TransactionRejectedRpcError || err instanceof InvalidInputRpcError || err instanceof RpcRequestError && err.code === ExecutionRevertedError.code;\n}\nexport function getNodeError(err, args) {\n  const message = (err.details || '').toLowerCase();\n  const executionRevertedError = err.walk(e => e.code === ExecutionRevertedError.code);\n  if (executionRevertedError instanceof BaseError) {\n    return new ExecutionRevertedError({\n      cause: err,\n      message: executionRevertedError.details\n    });\n  } else if (ExecutionRevertedError.nodeMessage.test(message)) return new ExecutionRevertedError({\n    cause: err,\n    message: err.details\n  });else if (FeeCapTooHighError.nodeMessage.test(message)) return new FeeCapTooHighError({\n    cause: err,\n    maxFeePerGas: args === null || args === void 0 ? void 0 : args.maxFeePerGas\n  });else if (FeeCapTooLowError.nodeMessage.test(message)) return new FeeCapTooLowError({\n    cause: err,\n    maxFeePerGas: args === null || args === void 0 ? void 0 : args.maxFeePerGas\n  });else if (NonceTooHighError.nodeMessage.test(message)) return new NonceTooHighError({\n    cause: err,\n    nonce: args === null || args === void 0 ? void 0 : args.nonce\n  });else if (NonceTooLowError.nodeMessage.test(message)) return new NonceTooLowError({\n    cause: err,\n    nonce: args === null || args === void 0 ? void 0 : args.nonce\n  });else if (NonceMaxValueError.nodeMessage.test(message)) return new NonceMaxValueError({\n    cause: err,\n    nonce: args === null || args === void 0 ? void 0 : args.nonce\n  });else if (InsufficientFundsError.nodeMessage.test(message)) return new InsufficientFundsError({\n    cause: err\n  });else if (IntrinsicGasTooHighError.nodeMessage.test(message)) return new IntrinsicGasTooHighError({\n    cause: err,\n    gas: args === null || args === void 0 ? void 0 : args.gas\n  });else if (IntrinsicGasTooLowError.nodeMessage.test(message)) return new IntrinsicGasTooLowError({\n    cause: err,\n    gas: args === null || args === void 0 ? void 0 : args.gas\n  });else if (TransactionTypeNotSupportedError.nodeMessage.test(message)) return new TransactionTypeNotSupportedError({\n    cause: err\n  });else if (TipAboveFeeCapError.nodeMessage.test(message)) return new TipAboveFeeCapError({\n    cause: err,\n    maxFeePerGas: args === null || args === void 0 ? void 0 : args.maxFeePerGas,\n    maxPriorityFeePerGas: args === null || args === void 0 ? void 0 : args.maxPriorityFeePerGas\n  });\n  return new UnknownNodeError({\n    cause: err\n  });\n}","map":{"version":3,"names":["BaseError","ExecutionRevertedError","FeeCapTooHighError","FeeCapTooLowError","InsufficientFundsError","IntrinsicGasTooHighError","IntrinsicGasTooLowError","NonceMaxValueError","NonceTooHighError","NonceTooLowError","TipAboveFeeCapError","TransactionTypeNotSupportedError","UnknownNodeError","RpcRequestError","InvalidInputRpcError","TransactionRejectedRpcError","containsNodeError","err","code","getNodeError","args","message","details","toLowerCase","executionRevertedError","walk","e","cause","nodeMessage","test","maxFeePerGas","nonce","gas","maxPriorityFeePerGas"],"sources":["/Users/kanaiyuuta/Downloads/test-yuuta-main/node_modules/viem/utils/errors/getNodeError.ts"],"sourcesContent":["import type { SendTransactionParameters } from '../../actions/wallet/sendTransaction.js'\nimport { BaseError } from '../../errors/base.js'\nimport {\n  ExecutionRevertedError,\n  FeeCapTooHighError,\n  FeeCapTooLowError,\n  InsufficientFundsError,\n  IntrinsicGasTooHighError,\n  IntrinsicGasTooLowError,\n  NonceMaxValueError,\n  NonceTooHighError,\n  NonceTooLowError,\n  TipAboveFeeCapError,\n  TransactionTypeNotSupportedError,\n  UnknownNodeError,\n} from '../../errors/node.js'\nimport { RpcRequestError } from '../../errors/request.js'\nimport {\n  InvalidInputRpcError,\n  TransactionRejectedRpcError,\n} from '../../errors/rpc.js'\n\nexport function containsNodeError(err: BaseError) {\n  return (\n    err instanceof TransactionRejectedRpcError ||\n    err instanceof InvalidInputRpcError ||\n    (err instanceof RpcRequestError && err.code === ExecutionRevertedError.code)\n  )\n}\n\nexport type GetNodeErrorParameters = Partial<SendTransactionParameters<any>>\n\nexport function getNodeError(err: BaseError, args: GetNodeErrorParameters) {\n  const message = (err.details || '').toLowerCase()\n\n  const executionRevertedError = err.walk(\n    (e) => (e as { code: number }).code === ExecutionRevertedError.code,\n  )\n  if (executionRevertedError instanceof BaseError) {\n    return new ExecutionRevertedError({\n      cause: err,\n      message: executionRevertedError.details,\n    })\n  } else if (ExecutionRevertedError.nodeMessage.test(message))\n    return new ExecutionRevertedError({\n      cause: err,\n      message: err.details,\n    })\n  else if (FeeCapTooHighError.nodeMessage.test(message))\n    return new FeeCapTooHighError({\n      cause: err,\n      maxFeePerGas: args?.maxFeePerGas,\n    })\n  else if (FeeCapTooLowError.nodeMessage.test(message))\n    return new FeeCapTooLowError({\n      cause: err,\n      maxFeePerGas: args?.maxFeePerGas,\n    })\n  else if (NonceTooHighError.nodeMessage.test(message))\n    return new NonceTooHighError({ cause: err, nonce: args?.nonce })\n  else if (NonceTooLowError.nodeMessage.test(message))\n    return new NonceTooLowError({ cause: err, nonce: args?.nonce })\n  else if (NonceMaxValueError.nodeMessage.test(message))\n    return new NonceMaxValueError({ cause: err, nonce: args?.nonce })\n  else if (InsufficientFundsError.nodeMessage.test(message))\n    return new InsufficientFundsError({ cause: err })\n  else if (IntrinsicGasTooHighError.nodeMessage.test(message))\n    return new IntrinsicGasTooHighError({ cause: err, gas: args?.gas })\n  else if (IntrinsicGasTooLowError.nodeMessage.test(message))\n    return new IntrinsicGasTooLowError({ cause: err, gas: args?.gas })\n  else if (TransactionTypeNotSupportedError.nodeMessage.test(message))\n    return new TransactionTypeNotSupportedError({ cause: err })\n  else if (TipAboveFeeCapError.nodeMessage.test(message))\n    return new TipAboveFeeCapError({\n      cause: err,\n      maxFeePerGas: args?.maxFeePerGas,\n      maxPriorityFeePerGas: args?.maxPriorityFeePerGas,\n    })\n  return new UnknownNodeError({\n    cause: err,\n  })\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}