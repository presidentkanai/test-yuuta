{"ast":null,"code":"import { concat } from '../data/concat.js';\nimport { toBytes } from './toBytes.js';\nimport { bytesToHex } from './toHex.js';\nexport function toRlp(hexOrBytes, to_) {\n  const to = to_ || 'hex';\n  return format(bytesToRlp(parse(hexOrBytes)), to);\n}\nfunction parse(hexOrBytes) {\n  if (Array.isArray(hexOrBytes)) return hexOrBytes.map(parse);\n  return typeof hexOrBytes === 'string' ? toBytes(hexOrBytes) : hexOrBytes;\n}\nfunction format(bytes) {\n  let type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'bytes';\n  return type === 'hex' ? bytesToHex(bytes) : bytes;\n}\nexport function bytesToRlp(bytes) {\n  if (Array.isArray(bytes)) {\n    const encoded = concat(bytes.map(bytesToRlp));\n    return new Uint8Array([...encodeLength(encoded.length, 0xc0), ...encoded]);\n  }\n  if (bytes.length === 1 && bytes[0] < 0x80) return bytes;\n  return new Uint8Array([...encodeLength(bytes.length, 0x80), ...bytes]);\n}\nfunction encodeLength(length, offset) {\n  if (length < 56) return [offset + length];\n  return [toBytes(length).length + offset + 55, ...toBytes(length)];\n}","map":{"version":3,"names":["concat","toBytes","bytesToHex","toRlp","hexOrBytes","to_","to","format","bytesToRlp","parse","Array","isArray","map","bytes","type","arguments","length","undefined","encoded","Uint8Array","encodeLength","offset"],"sources":["/Users/kanaiyuuta/Downloads/test-yuuta-main/node_modules/viem/utils/encoding/toRlp.ts"],"sourcesContent":["import type { ByteArray, Hex } from '../../types/misc.js'\nimport { concat } from '../data/concat.js'\n\nimport { toBytes } from './toBytes.js'\nimport { bytesToHex } from './toHex.js'\n\nexport type RecursiveArray<T> = T | RecursiveArray<T>[]\n\ntype To = 'hex' | 'bytes'\n\nexport type ToRlpReturnType<TTo extends To> = TTo extends 'bytes'\n  ? ByteArray\n  : TTo extends 'hex'\n  ? Hex\n  : never\n\nexport function toRlp<TTo extends To = 'hex'>(\n  hexOrBytes: RecursiveArray<Hex> | RecursiveArray<ByteArray>,\n  to_?: TTo,\n) {\n  const to = to_ || ('hex' as const)\n  return format(bytesToRlp(parse(hexOrBytes)), to) as ToRlpReturnType<TTo>\n}\n\nfunction parse(\n  hexOrBytes: RecursiveArray<Hex> | RecursiveArray<ByteArray>,\n): RecursiveArray<ByteArray> {\n  if (Array.isArray(hexOrBytes)) return hexOrBytes.map(parse)\n  return typeof hexOrBytes === 'string' ? toBytes(hexOrBytes) : hexOrBytes\n}\n\nfunction format(bytes: ByteArray, type: 'hex' | 'bytes' = 'bytes') {\n  return type === 'hex' ? bytesToHex(bytes) : bytes\n}\n\nexport function bytesToRlp(bytes: RecursiveArray<ByteArray>): ByteArray {\n  if (Array.isArray(bytes)) {\n    const encoded = concat(bytes.map(bytesToRlp))\n    return new Uint8Array([...encodeLength(encoded.length, 0xc0), ...encoded])\n  }\n\n  if (bytes.length === 1 && bytes[0] < 0x80) return bytes\n  return new Uint8Array([...encodeLength(bytes.length, 0x80), ...bytes])\n}\n\nfunction encodeLength(length: number, offset: number) {\n  if (length < 56) return [offset + length]\n  return [toBytes(length).length + offset + 55, ...toBytes(length)]\n}\n"],"mappings":"AACA,SAASA,MAAM,QAAQ,mBAAmB;AAE1C,SAASC,OAAO,QAAQ,cAAc;AACtC,SAASC,UAAU,QAAQ,YAAY;AAYvC,OAAM,SAAUC,KAAKA,CACnBC,UAA2D,EAC3DC,GAAS;EAET,MAAMC,EAAE,GAAGD,GAAG,IAAK,KAAe;EAClC,OAAOE,MAAM,CAACC,UAAU,CAACC,KAAK,CAACL,UAAU,CAAC,CAAC,EAAEE,EAAE,CAAyB;AAC1E;AAEA,SAASG,KAAKA,CACZL,UAA2D;EAE3D,IAAIM,KAAK,CAACC,OAAO,CAACP,UAAU,CAAC,EAAE,OAAOA,UAAU,CAACQ,GAAG,CAACH,KAAK,CAAC;EAC3D,OAAO,OAAOL,UAAU,KAAK,QAAQ,GAAGH,OAAO,CAACG,UAAU,CAAC,GAAGA,UAAU;AAC1E;AAEA,SAASG,MAAMA,CAACM,KAAgB,EAAiC;EAAA,IAA/BC,IAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAwB,OAAO;EAC/D,OAAOD,IAAI,KAAK,KAAK,GAAGZ,UAAU,CAACW,KAAK,CAAC,GAAGA,KAAK;AACnD;AAEA,OAAM,SAAUL,UAAUA,CAACK,KAAgC;EACzD,IAAIH,KAAK,CAACC,OAAO,CAACE,KAAK,CAAC,EAAE;IACxB,MAAMK,OAAO,GAAGlB,MAAM,CAACa,KAAK,CAACD,GAAG,CAACJ,UAAU,CAAC,CAAC;IAC7C,OAAO,IAAIW,UAAU,CAAC,CAAC,GAAGC,YAAY,CAACF,OAAO,CAACF,MAAM,EAAE,IAAI,CAAC,EAAE,GAAGE,OAAO,CAAC,CAAC;;EAG5E,IAAIL,KAAK,CAACG,MAAM,KAAK,CAAC,IAAIH,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,EAAE,OAAOA,KAAK;EACvD,OAAO,IAAIM,UAAU,CAAC,CAAC,GAAGC,YAAY,CAACP,KAAK,CAACG,MAAM,EAAE,IAAI,CAAC,EAAE,GAAGH,KAAK,CAAC,CAAC;AACxE;AAEA,SAASO,YAAYA,CAACJ,MAAc,EAAEK,MAAc;EAClD,IAAIL,MAAM,GAAG,EAAE,EAAE,OAAO,CAACK,MAAM,GAAGL,MAAM,CAAC;EACzC,OAAO,CAACf,OAAO,CAACe,MAAM,CAAC,CAACA,MAAM,GAAGK,MAAM,GAAG,EAAE,EAAE,GAAGpB,OAAO,CAACe,MAAM,CAAC,CAAC;AACnE"},"metadata":{},"sourceType":"module","externalDependencies":[]}