{"ast":null,"code":"import React from 'react';\nimport { selectWord } from '../utils/markdownUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var comment = {\n  name: 'comment',\n  keyCommand: 'comment',\n  shortcuts: 'ctrlcmd+/',\n  value: '<!-- -->',\n  buttonProps: {\n    'aria-label': 'Insert comment (ctrl + /)',\n    title: 'Insert comment (ctrl + /)'\n  },\n  execute: (state, api) => {\n    // Adjust the selection to encompass the whole word if the caret is inside one\n    var newSelectionRange = selectWord({\n      text: state.text,\n      selection: state.selection\n    });\n    var state1 = api.setSelectionRange(newSelectionRange);\n    // Replaces the current selection with the bold mark up\n    var state2 = api.replaceSelection(\"<!-- \" + state1.selectedText + \" -->\");\n    // Adjust the selection to not contain the **\n    api.setSelectionRange({\n      start: state2.selection.end - 4 - state1.selectedText.length,\n      end: state2.selection.end - 4\n    });\n  },\n  icon: /*#__PURE__*/_jsx(\"svg\", {\n    height: \"1em\",\n    width: \"1em\",\n    viewBox: \"0 0 25 25\",\n    children: /*#__PURE__*/_jsxs(\"g\", {\n      fill: \"none\",\n      fillRule: \"evenodd\",\n      children: [/*#__PURE__*/_jsx(\"polygon\", {\n        points: \".769 .727 24.981 .727 24.981 24.727 .769 24.727\"\n      }), /*#__PURE__*/_jsx(\"path\", {\n        stroke: \"currentColor\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"3\",\n        d: \"M12.625,23.8787879 L8.125,19.6969697 L5.125,19.6969697 C2.63971863,19.6969697 0.625,17.8247059 0.625,15.5151515 L0.625,7.15151515 C0.625,4.84196074 2.63971863,2.96969697 5.125,2.96969697 L20.125,2.96969697 C22.6102814,2.96969697 24.625,4.84196074 24.625,7.15151515 L24.625,15.5151515 C24.625,17.8247059 22.6102814,19.6969697 20.125,19.6969697 L17.125,19.6969697 L12.625,23.8787879\"\n      }), /*#__PURE__*/_jsx(\"path\", {\n        stroke: \"currentColor\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"3\",\n        d: \"M10.625,8.54545455 L7.25,11.3333333 L10.625,14.1212121 M15.6875,8.54545455 L19.0625,11.3333333 L15.6875,14.1212121\"\n      })]\n    })\n  })\n};","map":{"version":3,"names":["React","selectWord","jsx","_jsx","jsxs","_jsxs","comment","name","keyCommand","shortcuts","value","buttonProps","title","execute","state","api","newSelectionRange","text","selection","state1","setSelectionRange","state2","replaceSelection","selectedText","start","end","length","icon","height","width","viewBox","children","fill","fillRule","points","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d"],"sources":["/Users/kanaiyuuta/Downloads/test-yuuta-main/node_modules/@uiw/react-md-editor/esm/commands/comment.js"],"sourcesContent":["import React from 'react';\nimport { selectWord } from '../utils/markdownUtils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var comment = {\n  name: 'comment',\n  keyCommand: 'comment',\n  shortcuts: 'ctrlcmd+/',\n  value: '<!-- -->',\n  buttonProps: {\n    'aria-label': 'Insert comment (ctrl + /)',\n    title: 'Insert comment (ctrl + /)'\n  },\n  execute: (state, api) => {\n    // Adjust the selection to encompass the whole word if the caret is inside one\n    var newSelectionRange = selectWord({\n      text: state.text,\n      selection: state.selection\n    });\n    var state1 = api.setSelectionRange(newSelectionRange);\n    // Replaces the current selection with the bold mark up\n    var state2 = api.replaceSelection(\"<!-- \" + state1.selectedText + \" -->\");\n    // Adjust the selection to not contain the **\n    api.setSelectionRange({\n      start: state2.selection.end - 4 - state1.selectedText.length,\n      end: state2.selection.end - 4\n    });\n  },\n  icon: /*#__PURE__*/_jsx(\"svg\", {\n    height: \"1em\",\n    width: \"1em\",\n    viewBox: \"0 0 25 25\",\n    children: /*#__PURE__*/_jsxs(\"g\", {\n      fill: \"none\",\n      fillRule: \"evenodd\",\n      children: [/*#__PURE__*/_jsx(\"polygon\", {\n        points: \".769 .727 24.981 .727 24.981 24.727 .769 24.727\"\n      }), /*#__PURE__*/_jsx(\"path\", {\n        stroke: \"currentColor\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"3\",\n        d: \"M12.625,23.8787879 L8.125,19.6969697 L5.125,19.6969697 C2.63971863,19.6969697 0.625,17.8247059 0.625,15.5151515 L0.625,7.15151515 C0.625,4.84196074 2.63971863,2.96969697 5.125,2.96969697 L20.125,2.96969697 C22.6102814,2.96969697 24.625,4.84196074 24.625,7.15151515 L24.625,15.5151515 C24.625,17.8247059 22.6102814,19.6969697 20.125,19.6969697 L17.125,19.6969697 L12.625,23.8787879\"\n      }), /*#__PURE__*/_jsx(\"path\", {\n        stroke: \"currentColor\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"3\",\n        d: \"M10.625,8.54545455 L7.25,11.3333333 L10.625,14.1212121 M15.6875,8.54545455 L19.0625,11.3333333 L15.6875,14.1212121\"\n      })]\n    })\n  })\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,wBAAwB;AACnD,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,SAASC,IAAI,IAAIC,KAAK,QAAQ,mBAAmB;AACjD,OAAO,IAAIC,OAAO,GAAG;EACnBC,IAAI,EAAE,SAAS;EACfC,UAAU,EAAE,SAAS;EACrBC,SAAS,EAAE,WAAW;EACtBC,KAAK,EAAE,UAAU;EACjBC,WAAW,EAAE;IACX,YAAY,EAAE,2BAA2B;IACzCC,KAAK,EAAE;EACT,CAAC;EACDC,OAAO,EAAEA,CAACC,KAAK,EAAEC,GAAG,KAAK;IACvB;IACA,IAAIC,iBAAiB,GAAGf,UAAU,CAAC;MACjCgB,IAAI,EAAEH,KAAK,CAACG,IAAI;MAChBC,SAAS,EAAEJ,KAAK,CAACI;IACnB,CAAC,CAAC;IACF,IAAIC,MAAM,GAAGJ,GAAG,CAACK,iBAAiB,CAACJ,iBAAiB,CAAC;IACrD;IACA,IAAIK,MAAM,GAAGN,GAAG,CAACO,gBAAgB,CAAC,OAAO,GAAGH,MAAM,CAACI,YAAY,GAAG,MAAM,CAAC;IACzE;IACAR,GAAG,CAACK,iBAAiB,CAAC;MACpBI,KAAK,EAAEH,MAAM,CAACH,SAAS,CAACO,GAAG,GAAG,CAAC,GAAGN,MAAM,CAACI,YAAY,CAACG,MAAM;MAC5DD,GAAG,EAAEJ,MAAM,CAACH,SAAS,CAACO,GAAG,GAAG;IAC9B,CAAC,CAAC;EACJ,CAAC;EACDE,IAAI,EAAE,aAAaxB,IAAI,CAAC,KAAK,EAAE;IAC7ByB,MAAM,EAAE,KAAK;IACbC,KAAK,EAAE,KAAK;IACZC,OAAO,EAAE,WAAW;IACpBC,QAAQ,EAAE,aAAa1B,KAAK,CAAC,GAAG,EAAE;MAChC2B,IAAI,EAAE,MAAM;MACZC,QAAQ,EAAE,SAAS;MACnBF,QAAQ,EAAE,CAAC,aAAa5B,IAAI,CAAC,SAAS,EAAE;QACtC+B,MAAM,EAAE;MACV,CAAC,CAAC,EAAE,aAAa/B,IAAI,CAAC,MAAM,EAAE;QAC5BgC,MAAM,EAAE,cAAc;QACtBC,aAAa,EAAE,OAAO;QACtBC,cAAc,EAAE,OAAO;QACvBC,WAAW,EAAE,GAAG;QAChBC,CAAC,EAAE;MACL,CAAC,CAAC,EAAE,aAAapC,IAAI,CAAC,MAAM,EAAE;QAC5BgC,MAAM,EAAE,cAAc;QACtBC,aAAa,EAAE,OAAO;QACtBC,cAAc,EAAE,OAAO;QACvBC,WAAW,EAAE,GAAG;QAChBC,CAAC,EAAE;MACL,CAAC,CAAC;IACJ,CAAC;EACH,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}