{"ast":null,"code":"import { parseAccount } from '../../accounts/utils/parseAccount.js';\nimport { InvalidAddressError } from '../../errors/address.js';\nimport { FeeCapTooHighError, TipAboveFeeCapError } from '../../errors/node.js';\nimport { FeeConflictError } from '../../errors/transaction.js';\nimport { isAddress } from '../address/isAddress.js';\nexport function assertRequest(args) {\n  const {\n    account: account_,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    to\n  } = args;\n  const account = account_ ? parseAccount(account_) : undefined;\n  if (account && !isAddress(account.address)) throw new InvalidAddressError({\n    address: account.address\n  });\n  if (to && !isAddress(to)) throw new InvalidAddressError({\n    address: to\n  });\n  if (typeof gasPrice !== 'undefined' && (typeof maxFeePerGas !== 'undefined' || typeof maxPriorityFeePerGas !== 'undefined')) throw new FeeConflictError();\n  if (maxFeePerGas && maxFeePerGas > 2n ** 256n - 1n) throw new FeeCapTooHighError({\n    maxFeePerGas\n  });\n  if (maxPriorityFeePerGas && maxFeePerGas && maxPriorityFeePerGas > maxFeePerGas) throw new TipAboveFeeCapError({\n    maxFeePerGas,\n    maxPriorityFeePerGas\n  });\n}","map":{"version":3,"names":["parseAccount","InvalidAddressError","FeeCapTooHighError","TipAboveFeeCapError","FeeConflictError","isAddress","assertRequest","args","account","account_","gasPrice","maxFeePerGas","maxPriorityFeePerGas","to","undefined","address"],"sources":["/Users/kanaiyuuta/Downloads/test-yuuta-main/node_modules/viem/utils/transaction/assertRequest.ts"],"sourcesContent":["import { parseAccount } from '../../accounts/utils/parseAccount.js'\nimport type { SendTransactionParameters } from '../../actions/wallet/sendTransaction.js'\nimport { InvalidAddressError } from '../../errors/address.js'\nimport { FeeCapTooHighError, TipAboveFeeCapError } from '../../errors/node.js'\nimport { FeeConflictError } from '../../errors/transaction.js'\nimport type { Chain } from '../../types/chain.js'\nimport { isAddress } from '../address/isAddress.js'\n\nexport type AssertRequestParameters = Partial<SendTransactionParameters<Chain>>\n\nexport function assertRequest(args: AssertRequestParameters) {\n  const {\n    account: account_,\n    gasPrice,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    to,\n  } = args\n  const account = account_ ? parseAccount(account_) : undefined\n  if (account && !isAddress(account.address))\n    throw new InvalidAddressError({ address: account.address })\n  if (to && !isAddress(to)) throw new InvalidAddressError({ address: to })\n  if (\n    typeof gasPrice !== 'undefined' &&\n    (typeof maxFeePerGas !== 'undefined' ||\n      typeof maxPriorityFeePerGas !== 'undefined')\n  )\n    throw new FeeConflictError()\n\n  if (maxFeePerGas && maxFeePerGas > 2n ** 256n - 1n)\n    throw new FeeCapTooHighError({ maxFeePerGas })\n  if (\n    maxPriorityFeePerGas &&\n    maxFeePerGas &&\n    maxPriorityFeePerGas > maxFeePerGas\n  )\n    throw new TipAboveFeeCapError({ maxFeePerGas, maxPriorityFeePerGas })\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,sCAAsC;AAEnE,SAASC,mBAAmB,QAAQ,yBAAyB;AAC7D,SAASC,kBAAkB,EAAEC,mBAAmB,QAAQ,sBAAsB;AAC9E,SAASC,gBAAgB,QAAQ,6BAA6B;AAE9D,SAASC,SAAS,QAAQ,yBAAyB;AAInD,OAAM,SAAUC,aAAaA,CAACC,IAA6B;EACzD,MAAM;IACJC,OAAO,EAAEC,QAAQ;IACjBC,QAAQ;IACRC,YAAY;IACZC,oBAAoB;IACpBC;EAAE,CACH,GAAGN,IAAI;EACR,MAAMC,OAAO,GAAGC,QAAQ,GAAGT,YAAY,CAACS,QAAQ,CAAC,GAAGK,SAAS;EAC7D,IAAIN,OAAO,IAAI,CAACH,SAAS,CAACG,OAAO,CAACO,OAAO,CAAC,EACxC,MAAM,IAAId,mBAAmB,CAAC;IAAEc,OAAO,EAAEP,OAAO,CAACO;EAAO,CAAE,CAAC;EAC7D,IAAIF,EAAE,IAAI,CAACR,SAAS,CAACQ,EAAE,CAAC,EAAE,MAAM,IAAIZ,mBAAmB,CAAC;IAAEc,OAAO,EAAEF;EAAE,CAAE,CAAC;EACxE,IACE,OAAOH,QAAQ,KAAK,WAAW,KAC9B,OAAOC,YAAY,KAAK,WAAW,IAClC,OAAOC,oBAAoB,KAAK,WAAW,CAAC,EAE9C,MAAM,IAAIR,gBAAgB,EAAE;EAE9B,IAAIO,YAAY,IAAIA,YAAY,GAAG,EAAE,IAAI,IAAI,GAAG,EAAE,EAChD,MAAM,IAAIT,kBAAkB,CAAC;IAAES;EAAY,CAAE,CAAC;EAChD,IACEC,oBAAoB,IACpBD,YAAY,IACZC,oBAAoB,GAAGD,YAAY,EAEnC,MAAM,IAAIR,mBAAmB,CAAC;IAAEQ,YAAY;IAAEC;EAAoB,CAAE,CAAC;AACzE"},"metadata":{},"sourceType":"module","externalDependencies":[]}