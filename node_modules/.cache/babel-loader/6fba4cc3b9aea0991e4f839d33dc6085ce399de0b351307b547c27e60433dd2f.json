{"ast":null,"code":"import{ethers}from\"ethers\";import{BiLogIn}from\"react-icons/bi\";import{chainId,rpc,bloctoSDK,quiz_address,token_address}from\"./config\";import{useState}from\"react\";import{ReactComponent as MetaMaskLogo}from\"./images/metamask-icon.svg\";import{ReactComponent as BloctoLogo}from\"./images/blocto-icon.svg\";import ListGroup from\"react-bootstrap/ListGroup\";import\"./login.css\";import Button from\"react-bootstrap/Button\";import Badge from\"react-bootstrap/Badge\";//import BloctoSDK from \"@blocto/sdk\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const{ethereum}=window;function Login(){const[currentAccount,setCurrentAccount]=useState(true);const[use_wallet,setUse_wallet]=useState(\"\");const connect_MetamaskHandler=async()=>{const accounts=await ethereum.request({method:\"eth_requestAccounts\"});console.log(\"Found an account! Address: \",accounts[0]);setCurrentAccount(accounts[0]);setUse_wallet(\"MetaMask\");};const Wallet_select=()=>{return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Connect Your Wallet\"}),/*#__PURE__*/_jsx(ListGroup,{children:/*#__PURE__*/_jsx(\"div\",{onClick:()=>{connect_MetamaskHandler();},children:/*#__PURE__*/_jsxs(ListGroup.Item,{as:\"li\",className:\"d-flex justify-content-between align-items-start\",children:[/*#__PURE__*/_jsx(MetaMaskLogo,{style:{width:\"36px\",height:\"36px\",fill:\"blue\"}}),\"MetaMask\",/*#__PURE__*/_jsx(Badge,{bg:\"primary\",pill:true,children:\"Popular\"})]})})})]});};return/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(Wallet_select,{})});}export default Login;","map":{"version":3,"names":["ethers","BiLogIn","chainId","rpc","bloctoSDK","quiz_address","token_address","useState","ReactComponent","MetaMaskLogo","BloctoLogo","ListGroup","Button","Badge","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ethereum","window","Login","currentAccount","setCurrentAccount","use_wallet","setUse_wallet","connect_MetamaskHandler","accounts","request","method","console","log","Wallet_select","children","onClick","Item","as","className","style","width","height","fill","bg","pill"],"sources":["/Users/kanaiyuuta/Downloads/test-yuuta-main/src/contract/login.jsx"],"sourcesContent":["import { ethers } from \"ethers\";\n\nimport { BiLogIn } from \"react-icons/bi\";\nimport { chainId, rpc, bloctoSDK, quiz_address, token_address } from \"./config\";\nimport { useState } from \"react\";\nimport { ReactComponent as MetaMaskLogo } from \"./images/metamask-icon.svg\";\nimport { ReactComponent as BloctoLogo } from \"./images/blocto-icon.svg\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport \"./login.css\";\nimport Button from \"react-bootstrap/Button\";\nimport Badge from \"react-bootstrap/Badge\";\n//import BloctoSDK from \"@blocto/sdk\";\nconst { ethereum } = window;\n\nfunction Login() {\n    const [currentAccount, setCurrentAccount] = useState(true);\n    const [use_wallet, setUse_wallet] = useState(\"\");\n    const connect_MetamaskHandler = async () => {\n        const accounts = await ethereum.request({ method: \"eth_requestAccounts\" });\n        console.log(\"Found an account! Address: \", accounts[0]);\n        setCurrentAccount(accounts[0]);\n        setUse_wallet(\"MetaMask\");\n    };\n\n    const Wallet_select = () => {\n        return (\n            <>\n                <h1>Connect Your Wallet</h1>\n                <ListGroup>\n                    <div\n                        onClick={() => {\n                            connect_MetamaskHandler();\n                        }}\n                    >\n                        <ListGroup.Item as=\"li\" className=\"d-flex justify-content-between align-items-start\">\n                            <MetaMaskLogo style={{ width: \"36px\", height: \"36px\", fill: \"blue\" }} />\n                            MetaMask\n                            <Badge bg=\"primary\" pill>\n                                Popular\n                            </Badge>\n                        </ListGroup.Item>\n                    </div>\n                </ListGroup>\n            </>\n        );\n    };\n    return (\n        <div className=\"container\">\n            <Wallet_select />\n        </div>\n    );\n}\n\nexport default Login;\n"],"mappings":"AAAA,OAASA,MAAM,KAAQ,QAAQ,CAE/B,OAASC,OAAO,KAAQ,gBAAgB,CACxC,OAASC,OAAO,CAAEC,GAAG,CAAEC,SAAS,CAAEC,YAAY,CAAEC,aAAa,KAAQ,UAAU,CAC/E,OAASC,QAAQ,KAAQ,OAAO,CAChC,OAASC,cAAc,GAAI,CAAAC,YAAY,KAAQ,4BAA4B,CAC3E,OAASD,cAAc,GAAI,CAAAE,UAAU,KAAQ,0BAA0B,CACvE,MAAO,CAAAC,SAAS,KAAM,2BAA2B,CACjD,MAAO,aAAa,CACpB,MAAO,CAAAC,MAAM,KAAM,wBAAwB,CAC3C,MAAO,CAAAC,KAAK,KAAM,uBAAuB,CACzC;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,gCAAAC,QAAA,IAAAC,SAAA,yBACA,KAAM,CAAEC,QAAS,CAAC,CAAGC,MAAM,CAE3B,QAAS,CAAAC,KAAKA,CAAA,CAAG,CACb,KAAM,CAACC,cAAc,CAAEC,iBAAiB,CAAC,CAAGjB,QAAQ,CAAC,IAAI,CAAC,CAC1D,KAAM,CAACkB,UAAU,CAAEC,aAAa,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAAAoB,uBAAuB,CAAG,KAAAA,CAAA,GAAY,CACxC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAR,QAAQ,CAACS,OAAO,CAAC,CAAEC,MAAM,CAAE,qBAAsB,CAAC,CAAC,CAC1EC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAEJ,QAAQ,CAAC,CAAC,CAAC,CAAC,CACvDJ,iBAAiB,CAACI,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC9BF,aAAa,CAAC,UAAU,CAAC,CAC7B,CAAC,CAED,KAAM,CAAAO,aAAa,CAAGA,CAAA,GAAM,CACxB,mBACIhB,KAAA,CAAAE,SAAA,EAAAe,QAAA,eACInB,IAAA,OAAAmB,QAAA,CAAI,qBAAmB,CAAI,CAAC,cAC5BnB,IAAA,CAACJ,SAAS,EAAAuB,QAAA,cACNnB,IAAA,QACIoB,OAAO,CAAEA,CAAA,GAAM,CACXR,uBAAuB,CAAC,CAAC,CAC7B,CAAE,CAAAO,QAAA,cAEFjB,KAAA,CAACN,SAAS,CAACyB,IAAI,EAACC,EAAE,CAAC,IAAI,CAACC,SAAS,CAAC,kDAAkD,CAAAJ,QAAA,eAChFnB,IAAA,CAACN,YAAY,EAAC8B,KAAK,CAAE,CAAEC,KAAK,CAAE,MAAM,CAAEC,MAAM,CAAE,MAAM,CAAEC,IAAI,CAAE,MAAO,CAAE,CAAE,CAAC,WAExE,cAAA3B,IAAA,CAACF,KAAK,EAAC8B,EAAE,CAAC,SAAS,CAACC,IAAI,MAAAV,QAAA,CAAC,SAEzB,CAAO,CAAC,EACI,CAAC,CAChB,CAAC,CACC,CAAC,EACd,CAAC,CAEX,CAAC,CACD,mBACInB,IAAA,QAAKuB,SAAS,CAAC,WAAW,CAAAJ,QAAA,cACtBnB,IAAA,CAACkB,aAAa,GAAE,CAAC,CAChB,CAAC,CAEd,CAEA,cAAe,CAAAX,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}