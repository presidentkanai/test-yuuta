{"ast":null,"code":"import { ChainDoesNotSupportContract, ChainMismatchError, ChainNotFoundError } from '../errors/chain.js';\nexport function assertCurrentChain(_ref) {\n  let {\n    chain,\n    currentChainId\n  } = _ref;\n  if (!chain) throw new ChainNotFoundError();\n  if (currentChainId !== chain.id) throw new ChainMismatchError({\n    chain,\n    currentChainId\n  });\n}\nexport function defineChain(chain) {\n  let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    fees = chain.fees,\n    formatters = chain.formatters,\n    serializers = chain.serializers\n  } = config;\n  return {\n    ...chain,\n    fees,\n    formatters,\n    serializers\n  };\n}\nexport function getChainContractAddress(_ref2) {\n  var _chain$contracts;\n  let {\n    blockNumber,\n    chain,\n    contract: name\n  } = _ref2;\n  const contract = chain === null || chain === void 0 || (_chain$contracts = chain.contracts) === null || _chain$contracts === void 0 ? void 0 : _chain$contracts[name];\n  if (!contract) throw new ChainDoesNotSupportContract({\n    chain,\n    contract: {\n      name\n    }\n  });\n  if (blockNumber && contract.blockCreated && contract.blockCreated > blockNumber) throw new ChainDoesNotSupportContract({\n    blockNumber,\n    chain,\n    contract: {\n      name,\n      blockCreated: contract.blockCreated\n    }\n  });\n  return contract.address;\n}","map":{"version":3,"names":["ChainDoesNotSupportContract","ChainMismatchError","ChainNotFoundError","assertCurrentChain","_ref","chain","currentChainId","id","defineChain","config","arguments","length","undefined","fees","formatters","serializers","getChainContractAddress","_ref2","_chain$contracts","blockNumber","contract","name","contracts","blockCreated","address"],"sources":["/Users/kanaiyuuta/Downloads/test-yuuta-main/node_modules/viem/utils/chain.ts"],"sourcesContent":["import {\n  ChainDoesNotSupportContract,\n  ChainMismatchError,\n  ChainNotFoundError,\n} from '../errors/chain.js'\nimport type {\n  Chain,\n  ChainConfig,\n  ChainContract,\n  ChainFormatters,\n} from '../types/chain.js'\nimport type { Assign } from '../types/utils.js'\n\nexport type AssertCurrentChainParameters = {\n  chain?: Chain\n  currentChainId: number\n}\n\nexport function assertCurrentChain({\n  chain,\n  currentChainId,\n}: AssertCurrentChainParameters): void {\n  if (!chain) throw new ChainNotFoundError()\n  if (currentChainId !== chain.id)\n    throw new ChainMismatchError({ chain, currentChainId })\n}\n\nexport function defineChain<\n  const chain extends Chain,\n  formatters extends ChainFormatters,\n>(\n  chain: chain,\n  config: ChainConfig<formatters> = {},\n): Assign<chain, ChainConfig<formatters>> {\n  const {\n    fees = chain.fees,\n    formatters = chain.formatters,\n    serializers = chain.serializers,\n  } = config\n  return {\n    ...chain,\n    fees,\n    formatters,\n    serializers,\n  } as unknown as Assign<chain, ChainConfig<formatters>>\n}\n\nexport function getChainContractAddress({\n  blockNumber,\n  chain,\n  contract: name,\n}: {\n  blockNumber?: bigint\n  chain: Chain\n  contract: string\n}) {\n  const contract = (chain?.contracts as Record<string, ChainContract>)?.[name]\n  if (!contract)\n    throw new ChainDoesNotSupportContract({\n      chain,\n      contract: { name },\n    })\n\n  if (\n    blockNumber &&\n    contract.blockCreated &&\n    contract.blockCreated > blockNumber\n  )\n    throw new ChainDoesNotSupportContract({\n      blockNumber,\n      chain,\n      contract: {\n        name,\n        blockCreated: contract.blockCreated,\n      },\n    })\n\n  return contract.address\n}\n"],"mappings":"AAAA,SACEA,2BAA2B,EAC3BC,kBAAkB,EAClBC,kBAAkB,QACb,oBAAoB;AAc3B,OAAM,SAAUC,kBAAkBA,CAAAC,IAAA,EAGH;EAAA,IAHI;IACjCC,KAAK;IACLC;EAAc,CACe,GAAAF,IAAA;EAC7B,IAAI,CAACC,KAAK,EAAE,MAAM,IAAIH,kBAAkB,EAAE;EAC1C,IAAII,cAAc,KAAKD,KAAK,CAACE,EAAE,EAC7B,MAAM,IAAIN,kBAAkB,CAAC;IAAEI,KAAK;IAAEC;EAAc,CAAE,CAAC;AAC3D;AAEA,OAAM,SAAUE,WAAWA,CAIzBH,KAAY,EACwB;EAAA,IAApCI,MAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAkC,EAAE;EAEpC,MAAM;IACJG,IAAI,GAAGR,KAAK,CAACQ,IAAI;IACjBC,UAAU,GAAGT,KAAK,CAACS,UAAU;IAC7BC,WAAW,GAAGV,KAAK,CAACU;EAAW,CAChC,GAAGN,MAAM;EACV,OAAO;IACL,GAAGJ,KAAK;IACRQ,IAAI;IACJC,UAAU;IACVC;GACoD;AACxD;AAEA,OAAM,SAAUC,uBAAuBA,CAAAC,KAAA,EAQtC;EAAA,IAAAC,gBAAA;EAAA,IARuC;IACtCC,WAAW;IACXd,KAAK;IACLe,QAAQ,EAAEC;EAAI,CAKf,GAAAJ,KAAA;EACC,MAAMG,QAAQ,GAAIf,KAAK,aAALA,KAAK,gBAAAa,gBAAA,GAALb,KAAK,CAAEiB,SAA2C,cAAAJ,gBAAA,uBAAlDA,gBAAA,CAAqDG,IAAI,CAAC;EAC5E,IAAI,CAACD,QAAQ,EACX,MAAM,IAAIpB,2BAA2B,CAAC;IACpCK,KAAK;IACLe,QAAQ,EAAE;MAAEC;IAAI;GACjB,CAAC;EAEJ,IACEF,WAAW,IACXC,QAAQ,CAACG,YAAY,IACrBH,QAAQ,CAACG,YAAY,GAAGJ,WAAW,EAEnC,MAAM,IAAInB,2BAA2B,CAAC;IACpCmB,WAAW;IACXd,KAAK;IACLe,QAAQ,EAAE;MACRC,IAAI;MACJE,YAAY,EAAEH,QAAQ,CAACG;;GAE1B,CAAC;EAEJ,OAAOH,QAAQ,CAACI,OAAO;AACzB"},"metadata":{},"sourceType":"module","externalDependencies":[]}