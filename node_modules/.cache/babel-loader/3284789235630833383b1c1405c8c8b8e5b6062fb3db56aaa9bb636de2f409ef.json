{"ast":null,"code":"import { checksumAddress } from '../../utils/address/getAddress.js';\nimport { keccak256 } from '../../utils/hash/keccak256.js';\n/**\n * @description Converts an ECDSA public key to an address.\n *\n * @param publicKey The public key to convert.\n *\n * @returns The address.\n */\nexport function publicKeyToAddress(publicKey) {\n  const address = keccak256(`0x${publicKey.substring(4)}`).substring(26);\n  return checksumAddress(`0x${address}`);\n}","map":{"version":3,"names":["checksumAddress","keccak256","publicKeyToAddress","publicKey","address","substring"],"sources":["/Users/kanaiyuuta/Downloads/test-yuuta-main/node_modules/viem/accounts/utils/publicKeyToAddress.ts"],"sourcesContent":["import type { Address } from 'abitype'\n\nimport type { Hex } from '../../types/misc.js'\nimport { checksumAddress } from '../../utils/address/getAddress.js'\nimport { keccak256 } from '../../utils/hash/keccak256.js'\n\n/**\n * @description Converts an ECDSA public key to an address.\n *\n * @param publicKey The public key to convert.\n *\n * @returns The address.\n */\nexport function publicKeyToAddress(publicKey: Hex): Address {\n  const address = keccak256(`0x${publicKey.substring(4)}`).substring(26)\n  return checksumAddress(`0x${address}`) as Address\n}\n"],"mappings":"AAGA,SAASA,eAAe,QAAQ,mCAAmC;AACnE,SAASC,SAAS,QAAQ,+BAA+B;AAEzD;;;;;;;AAOA,OAAM,SAAUC,kBAAkBA,CAACC,SAAc;EAC/C,MAAMC,OAAO,GAAGH,SAAS,CAAC,KAAKE,SAAS,CAACE,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAACA,SAAS,CAAC,EAAE,CAAC;EACtE,OAAOL,eAAe,CAAC,KAAKI,OAAO,EAAE,CAAY;AACnD"},"metadata":{},"sourceType":"module","externalDependencies":[]}