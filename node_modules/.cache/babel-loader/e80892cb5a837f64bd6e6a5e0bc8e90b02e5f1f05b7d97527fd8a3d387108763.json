{"ast":null,"code":"import Form from\"react-bootstrap/Form\";import{useState,useEffect,useRef}from\"react\";import MDEditor,{selectWord}from\"@uiw/react-md-editor\";import{resolvePath,useParams}from\"react-router-dom\";import Simple_history from\"./history_simple\";import{Link}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";function History_list(props){//1回の更新で追加で表示する個数\n//画面を満たす個数を計算して、add_numに代入\nconst add_num=useRef(Math.floor(window.innerHeight/100)+2);const history_list=props.history_list;const Set_history_list=props.Set_history_list;//クイズのリストを取得\nconst get_history_list=async now_sum=>{//追加分のクイズ用のリスト\nlet add_history_list=[];//クイズの総数を超えていたら\nif(now_sum-add_num.current<0){//now_numからquiz_numまでのクイズを取得\nadd_history_list=await props.cont.get_token_history(props.address,now_sum,0);//now_numを0にする\nprops.now_numRef.current=0;}else{//クイズの総数を超えていなかったら\n//now_numからnow_num+add_numまでのクイズを取得\nadd_history_list=await props.cont.get_token_history(props.address,now_sum,now_sum-add_num.current);//now_numをnow_num+add_numにする\nprops.now_numRef.current=now_sum-add_num.current;}//new_quiz_listをmapで展開して、quiz_listに追加\nlet now_history_list=[];//add_quiz_listをmapで展開して、now_quiz_listに追加\nconsole.log(add_history_list);add_history_list.map(history=>{now_history_list.push(/*#__PURE__*/_jsx(Simple_history,{history:history}));//DOMとして追加\n});Set_history_list(history_list=>[...history_list,...now_history_list]);};const options={root:null,// ビューポートをルートとする\nrootMargin:\"-10px\",// ビューポートに対するマージン\nthreshold:0// ターゲット要素が完全にビューポートに入った時にコールバックを実行\n};const observer=new IntersectionObserver(entries=>{for(const entry of entries){if(entry.isIntersecting){// ターゲット要素がビューポートに入った時の処理\n//console.log(\"ターゲット要素がビューポートに入りました。\");\nget_history_list(props.now_numRef.current);}else{// ターゲット要素がビューポートから出た時の処理\n//console.log(\"ターゲット要素がビューポートから出ました。\");\n}}},options);useEffect(()=>{const targetElement=props.targetRef.current;// ターゲット要素を取得\nif(targetElement){observer.observe(targetElement);// ターゲット要素をobserve\n// 初期状態でターゲット要素がビューポート内にある場合にもコールバックを実行\nif(targetElement.isIntersecting){console.log(\"ターゲット要素がビューポートに入っていました。\");get_history_list(props.now_numRef.current);}}return()=>{observer.unobserve(targetElement);// コンポーネントがアンマウントされる際にunobserve\n};},[]);// []を指定して初期状態のみで実行されるようにする\n}export default History_list;","map":{"version":3,"names":["Form","useState","useEffect","useRef","MDEditor","selectWord","resolvePath","useParams","Simple_history","Link","jsx","_jsx","History_list","props","add_num","Math","floor","window","innerHeight","history_list","Set_history_list","get_history_list","now_sum","add_history_list","current","cont","get_token_history","address","now_numRef","now_history_list","console","log","map","history","push","options","root","rootMargin","threshold","observer","IntersectionObserver","entries","entry","isIntersecting","targetElement","targetRef","observe","unobserve"],"sources":["/Users/kanaiyuuta/Downloads/test-yuuta-main/src/pages/user_page/component/history_list.jsx"],"sourcesContent":["import Form from \"react-bootstrap/Form\";\nimport {useState, useEffect, useRef} from \"react\";\nimport MDEditor, {selectWord} from \"@uiw/react-md-editor\";\nimport {resolvePath, useParams} from \"react-router-dom\";\nimport Simple_history from \"./history_simple\";\nimport {Link} from \"react-router-dom\";\nfunction History_list(props) {\n    //1回の更新で追加で表示する個数\n    //画面を満たす個数を計算して、add_numに代入\n    const add_num = useRef(Math.floor(window.innerHeight / 100) + 2);\n\n    const history_list = props.history_list;\n    const Set_history_list = props.Set_history_list;\n\n    //クイズのリストを取得\n    const get_history_list = async (now_sum) => {\n        //追加分のクイズ用のリスト\n        let add_history_list = [];\n\n        //クイズの総数を超えていたら\n\n        if (now_sum - add_num.current < 0) {\n            //now_numからquiz_numまでのクイズを取得\n            add_history_list = await props.cont.get_token_history(props.address, now_sum, 0);\n            //now_numを0にする\n            props.now_numRef.current = 0;\n        } else {\n            //クイズの総数を超えていなかったら\n            //now_numからnow_num+add_numまでのクイズを取得\n\n            add_history_list = await props.cont.get_token_history(props.address, now_sum, now_sum - add_num.current);\n            //now_numをnow_num+add_numにする\n            props.now_numRef.current = now_sum - add_num.current;\n        }\n        //new_quiz_listをmapで展開して、quiz_listに追加\n        let now_history_list = [];\n\n        //add_quiz_listをmapで展開して、now_quiz_listに追加\n\n        console.log(add_history_list);\n        add_history_list.map((history) => {\n            now_history_list.push(<Simple_history history={history} />); //DOMとして追加\n        });\n        Set_history_list((history_list) => [...history_list, ...now_history_list]);\n    };\n\n    const options = {\n        root: null, // ビューポートをルートとする\n        rootMargin: \"-10px\", // ビューポートに対するマージン\n        threshold: 0, // ターゲット要素が完全にビューポートに入った時にコールバックを実行\n    };\n\n    const observer = new IntersectionObserver((entries) => {\n        for (const entry of entries) {\n            if (entry.isIntersecting) {\n                // ターゲット要素がビューポートに入った時の処理\n                //console.log(\"ターゲット要素がビューポートに入りました。\");\n                get_history_list(props.now_numRef.current);\n            } else {\n                // ターゲット要素がビューポートから出た時の処理\n                //console.log(\"ターゲット要素がビューポートから出ました。\");\n            }\n        }\n    }, options);\n\n    useEffect(() => {\n        const targetElement = props.targetRef.current; // ターゲット要素を取得\n        if (targetElement) {\n            observer.observe(targetElement); // ターゲット要素をobserve\n            // 初期状態でターゲット要素がビューポート内にある場合にもコールバックを実行\n            if (targetElement.isIntersecting) {\n                console.log(\"ターゲット要素がビューポートに入っていました。\");\n                get_history_list(props.now_numRef.current);\n            }\n        }\n        return () => {\n            observer.unobserve(targetElement); // コンポーネントがアンマウントされる際にunobserve\n        };\n    }, []); // []を指定して初期状態のみで実行されるようにする\n}\nexport default History_list;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}