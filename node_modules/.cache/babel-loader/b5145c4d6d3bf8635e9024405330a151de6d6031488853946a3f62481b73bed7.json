{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _templateObject;\nimport React, { useContext, useEffect } from 'react';\nimport { rehype } from 'rehype';\nimport rehypePrism from 'rehype-prism-plus';\nimport { EditorContext } from '../../Context';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction html2Escape(sHtml) {\n  return sHtml\n  // .replace(/```(\\w+)?([\\s\\S]*?)(\\s.+)?```/g, (str: string) => {\n  //   return str.replace(\n  //     /[<&\"]/g,\n  //     (c: string) => (({ '<': '&lt;', '>': '&gt;', '&': '&amp;', '\"': '&quot;' } as Record<string, string>)[c]),\n  //   );\n  // })\n  .replace(/[<&\"]/g, c => ({\n    '<': '&lt;',\n    '>': '&gt;',\n    '&': '&amp;',\n    '\"': '&quot;'\n  })[c]);\n}\nexport default function Markdown(props) {\n  var {\n    prefixCls\n  } = props;\n  var {\n    markdown = '',\n    highlightEnable,\n    dispatch\n  } = useContext(EditorContext);\n  var preRef = /*#__PURE__*/React.createRef();\n  useEffect(() => {\n    if (preRef.current && dispatch) {\n      dispatch({\n        textareaPre: preRef.current\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  if (!markdown) {\n    return /*#__PURE__*/_jsx(\"pre\", {\n      ref: preRef,\n      className: prefixCls + \"-text-pre wmde-markdown-color\"\n    });\n  }\n  var mdStr = \"<pre class=\\\"language-markdown \" + prefixCls + \"-text-pre wmde-markdown-color\\\"><code class=\\\"language-markdown\\\">\" + html2Escape(String.raw(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\", \"\"])), markdown)) + \"\\n</code></pre>\";\n  if (highlightEnable) {\n    try {\n      mdStr = rehype().data('settings', {\n        fragment: true\n      }).use(rehypePrism, {\n        ignoreMissing: true\n      }).processSync(mdStr).toString();\n    } catch (error) {}\n  }\n  return /*#__PURE__*/React.createElement('div', {\n    className: 'wmde-markdown-color',\n    dangerouslySetInnerHTML: {\n      __html: mdStr || ''\n    }\n  });\n}","map":{"version":3,"names":["_taggedTemplateLiteralLoose","_templateObject","React","useContext","useEffect","rehype","rehypePrism","EditorContext","jsx","_jsx","html2Escape","sHtml","replace","c","Markdown","props","prefixCls","markdown","highlightEnable","dispatch","preRef","createRef","current","textareaPre","ref","className","mdStr","String","raw","data","fragment","use","ignoreMissing","processSync","toString","error","createElement","dangerouslySetInnerHTML","__html"],"sources":["/Users/kanaiyuuta/Downloads/test-yuuta-main/node_modules/@uiw/react-md-editor/esm/components/TextArea/Markdown.js"],"sourcesContent":["import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _templateObject;\nimport React, { useContext, useEffect } from 'react';\nimport { rehype } from 'rehype';\nimport rehypePrism from 'rehype-prism-plus';\nimport { EditorContext } from '../../Context';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction html2Escape(sHtml) {\n  return sHtml\n  // .replace(/```(\\w+)?([\\s\\S]*?)(\\s.+)?```/g, (str: string) => {\n  //   return str.replace(\n  //     /[<&\"]/g,\n  //     (c: string) => (({ '<': '&lt;', '>': '&gt;', '&': '&amp;', '\"': '&quot;' } as Record<string, string>)[c]),\n  //   );\n  // })\n  .replace(/[<&\"]/g, c => ({\n    '<': '&lt;',\n    '>': '&gt;',\n    '&': '&amp;',\n    '\"': '&quot;'\n  })[c]);\n}\nexport default function Markdown(props) {\n  var {\n    prefixCls\n  } = props;\n  var {\n    markdown = '',\n    highlightEnable,\n    dispatch\n  } = useContext(EditorContext);\n  var preRef = /*#__PURE__*/React.createRef();\n  useEffect(() => {\n    if (preRef.current && dispatch) {\n      dispatch({\n        textareaPre: preRef.current\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  if (!markdown) {\n    return /*#__PURE__*/_jsx(\"pre\", {\n      ref: preRef,\n      className: prefixCls + \"-text-pre wmde-markdown-color\"\n    });\n  }\n  var mdStr = \"<pre class=\\\"language-markdown \" + prefixCls + \"-text-pre wmde-markdown-color\\\"><code class=\\\"language-markdown\\\">\" + html2Escape(String.raw(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"\", \"\"])), markdown)) + \"\\n</code></pre>\";\n  if (highlightEnable) {\n    try {\n      mdStr = rehype().data('settings', {\n        fragment: true\n      }).use(rehypePrism, {\n        ignoreMissing: true\n      }).processSync(mdStr).toString();\n    } catch (error) {}\n  }\n  return /*#__PURE__*/React.createElement('div', {\n    className: 'wmde-markdown-color',\n    dangerouslySetInnerHTML: {\n      __html: mdStr || ''\n    }\n  });\n}"],"mappings":"AAAA,OAAOA,2BAA2B,MAAM,mDAAmD;AAC3F,IAAIC,eAAe;AACnB,OAAOC,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,WAAW,MAAM,mBAAmB;AAC3C,SAASC,aAAa,QAAQ,eAAe;AAC7C,SAASC,GAAG,IAAIC,IAAI,QAAQ,mBAAmB;AAC/C,SAASC,WAAWA,CAACC,KAAK,EAAE;EAC1B,OAAOA;EACP;EACA;EACA;EACA;EACA;EACA;EAAA,CACCC,OAAO,CAAC,QAAQ,EAAEC,CAAC,IAAI,CAAC;IACvB,GAAG,EAAE,MAAM;IACX,GAAG,EAAE,MAAM;IACX,GAAG,EAAE,OAAO;IACZ,GAAG,EAAE;EACP,CAAC,EAAEA,CAAC,CAAC,CAAC;AACR;AACA,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EACtC,IAAI;IACFC;EACF,CAAC,GAAGD,KAAK;EACT,IAAI;IACFE,QAAQ,GAAG,EAAE;IACbC,eAAe;IACfC;EACF,CAAC,GAAGhB,UAAU,CAACI,aAAa,CAAC;EAC7B,IAAIa,MAAM,GAAG,aAAalB,KAAK,CAACmB,SAAS,CAAC,CAAC;EAC3CjB,SAAS,CAAC,MAAM;IACd,IAAIgB,MAAM,CAACE,OAAO,IAAIH,QAAQ,EAAE;MAC9BA,QAAQ,CAAC;QACPI,WAAW,EAAEH,MAAM,CAACE;MACtB,CAAC,CAAC;IACJ;IACA;EACF,CAAC,EAAE,EAAE,CAAC;EACN,IAAI,CAACL,QAAQ,EAAE;IACb,OAAO,aAAaR,IAAI,CAAC,KAAK,EAAE;MAC9Be,GAAG,EAAEJ,MAAM;MACXK,SAAS,EAAET,SAAS,GAAG;IACzB,CAAC,CAAC;EACJ;EACA,IAAIU,KAAK,GAAG,iCAAiC,GAAGV,SAAS,GAAG,oEAAoE,GAAGN,WAAW,CAACiB,MAAM,CAACC,GAAG,CAAC3B,eAAe,KAAKA,eAAe,GAAGD,2BAA2B,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,EAAEiB,QAAQ,CAAC,CAAC,GAAG,iBAAiB;EACtQ,IAAIC,eAAe,EAAE;IACnB,IAAI;MACFQ,KAAK,GAAGrB,MAAM,CAAC,CAAC,CAACwB,IAAI,CAAC,UAAU,EAAE;QAChCC,QAAQ,EAAE;MACZ,CAAC,CAAC,CAACC,GAAG,CAACzB,WAAW,EAAE;QAClB0B,aAAa,EAAE;MACjB,CAAC,CAAC,CAACC,WAAW,CAACP,KAAK,CAAC,CAACQ,QAAQ,CAAC,CAAC;IAClC,CAAC,CAAC,OAAOC,KAAK,EAAE,CAAC;EACnB;EACA,OAAO,aAAajC,KAAK,CAACkC,aAAa,CAAC,KAAK,EAAE;IAC7CX,SAAS,EAAE,qBAAqB;IAChCY,uBAAuB,EAAE;MACvBC,MAAM,EAAEZ,KAAK,IAAI;IACnB;EACF,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}