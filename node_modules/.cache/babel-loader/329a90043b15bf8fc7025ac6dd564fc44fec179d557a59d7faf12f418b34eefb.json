{"ast":null,"code":"import { BaseError } from './base.js';\nexport class AccountNotFoundError extends BaseError {\n  constructor() {\n    let {\n      docsPath\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super(['Could not find an Account to execute with this Action.', 'Please provide an Account with the `account` argument on the Action, or by supplying an `account` to the WalletClient.'].join('\\n'), {\n      docsPath,\n      docsSlug: 'account'\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'AccountNotFoundError'\n    });\n  }\n}","map":{"version":3,"names":["BaseError","AccountNotFoundError","constructor","docsPath","arguments","length","undefined","join","docsSlug","Object","defineProperty"],"sources":["/Users/kanaiyuuta/Downloads/test-yuuta-main/node_modules/viem/errors/account.ts"],"sourcesContent":["import { BaseError } from './base.js'\n\nexport class AccountNotFoundError extends BaseError {\n  override name = 'AccountNotFoundError'\n  constructor({ docsPath }: { docsPath?: string } = {}) {\n    super(\n      [\n        'Could not find an Account to execute with this Action.',\n        'Please provide an Account with the `account` argument on the Action, or by supplying an `account` to the WalletClient.',\n      ].join('\\n'),\n      {\n        docsPath,\n        docsSlug: 'account',\n      },\n    )\n  }\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,WAAW;AAErC,OAAM,MAAOC,oBAAqB,SAAQD,SAAS;EAEjDE,YAAA,EAAoD;IAAA,IAAxC;MAAEC;IAAQ,IAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA4B,EAAE;IAClD,KAAK,CACH,CACE,wDAAwD,EACxD,wHAAwH,CACzH,CAACG,IAAI,CAAC,IAAI,CAAC,EACZ;MACEJ,QAAQ;MACRK,QAAQ,EAAE;KACX,CACF;IAXMC,MAAA,CAAAC,cAAA;;;;aAAO;;EAYhB"},"metadata":{},"sourceType":"module","externalDependencies":[]}