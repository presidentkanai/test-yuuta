{"ast":null,"code":"import { createClient } from './createClient.js';\nimport { publicActions } from './decorators/public.js';\nexport function createPublicClient(parameters) {\n  const {\n    key = 'public',\n    name = 'Public Client'\n  } = parameters;\n  const client = createClient({\n    ...parameters,\n    key,\n    name,\n    type: 'publicClient'\n  });\n  return client.extend(publicActions);\n}","map":{"version":3,"names":["createClient","publicActions","createPublicClient","parameters","key","name","client","type","extend"],"sources":["/Users/kanaiyuuta/Downloads/test-yuuta-main/node_modules/viem/clients/createPublicClient.ts"],"sourcesContent":["import type { Chain } from '../types/chain.js'\nimport type { PublicRpcSchema } from '../types/eip1193.js'\nimport type { Prettify } from '../types/utils.js'\nimport { type Client, type ClientConfig, createClient } from './createClient.js'\nimport { type PublicActions, publicActions } from './decorators/public.js'\nimport type { Transport } from './transports/createTransport.js'\n\nexport type PublicClientConfig<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n> = Prettify<\n  Pick<\n    ClientConfig<transport, chain>,\n    | 'batch'\n    | 'cacheTime'\n    | 'chain'\n    | 'key'\n    | 'name'\n    | 'pollingInterval'\n    | 'transport'\n  >\n>\n\nexport type PublicClient<\n  transport extends Transport = Transport,\n  chain extends Chain | undefined = Chain | undefined,\n> = Prettify<\n  Client<\n    transport,\n    chain,\n    undefined,\n    PublicRpcSchema,\n    PublicActions<transport, chain>\n  >\n>\n\n/**\n * Creates a Public Client with a given [Transport](https://viem.sh/docs/clients/intro.html) configured for a [Chain](https://viem.sh/docs/clients/chains.html).\n *\n * - Docs: https://viem.sh/docs/clients/public.html\n *\n * A Public Client is an interface to \"public\" [JSON-RPC API](https://ethereum.org/en/developers/docs/apis/json-rpc/) methods such as retrieving block numbers, transactions, reading from smart contracts, etc through [Public Actions](/docs/actions/public/introduction).\n *\n * @param config - {@link PublicClientConfig}\n * @returns A Public Client. {@link PublicClient}\n *\n * @example\n * import { createPublicClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n *\n * const client = createPublicClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n */\nexport function createPublicClient<\n  transport extends Transport,\n  chain extends Chain | undefined = undefined,\n>(\n  parameters: PublicClientConfig<transport, chain>,\n): PublicClient<transport, chain>\n\nexport function createPublicClient(\n  parameters: PublicClientConfig,\n): PublicClient {\n  const { key = 'public', name = 'Public Client' } = parameters\n  const client = createClient({\n    ...parameters,\n    key,\n    name,\n    type: 'publicClient',\n  })\n  return client.extend(publicActions)\n}\n"],"mappings":"AAGA,SAAyCA,YAAY,QAAQ,mBAAmB;AAChF,SAA6BC,aAAa,QAAQ,wBAAwB;AA0D1E,OAAM,SAAUC,kBAAkBA,CAChCC,UAA8B;EAE9B,MAAM;IAAEC,GAAG,GAAG,QAAQ;IAAEC,IAAI,GAAG;EAAe,CAAE,GAAGF,UAAU;EAC7D,MAAMG,MAAM,GAAGN,YAAY,CAAC;IAC1B,GAAGG,UAAU;IACbC,GAAG;IACHC,IAAI;IACJE,IAAI,EAAE;GACP,CAAC;EACF,OAAOD,MAAM,CAACE,MAAM,CAACP,aAAa,CAAC;AACrC"},"metadata":{},"sourceType":"module","externalDependencies":[]}