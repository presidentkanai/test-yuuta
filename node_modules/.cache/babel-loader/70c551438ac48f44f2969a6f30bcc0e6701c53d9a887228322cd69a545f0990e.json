{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { Fragment, useContext, useEffect, useRef } from 'react';\nimport { EditorContext } from '../../Context';\nimport Child from './Child';\nimport \"./index.css\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function ToolbarItems(props) {\n  var {\n    prefixCls,\n    overflow\n  } = props;\n  var {\n    fullscreen,\n    preview,\n    barPopup = {},\n    components,\n    commandOrchestrator,\n    dispatch\n  } = useContext(EditorContext);\n  var originalOverflow = useRef('');\n  function handleClick(command, name) {\n    if (!dispatch) return;\n    var state = {\n      barPopup: _extends({}, barPopup)\n    };\n    if (command.keyCommand === 'preview') {\n      state.preview = command.value;\n    }\n    if (command.keyCommand === 'fullscreen') {\n      state.fullscreen = !fullscreen;\n    }\n    if (props.commands && command.keyCommand === 'group') {\n      props.commands.forEach(item => {\n        if (name === item.groupName) {\n          state.barPopup[name] = true;\n        } else if (item.keyCommand) {\n          state.barPopup[item.groupName] = false;\n        }\n      });\n    } else if (name || command.parent) {\n      Object.keys(state.barPopup || {}).forEach(keyName => {\n        state.barPopup[keyName] = false;\n      });\n    }\n    if (Object.keys(state).length) {\n      dispatch(_extends({}, state));\n    }\n    commandOrchestrator && commandOrchestrator.executeCommand(command);\n  }\n  useEffect(() => {\n    if (document && overflow) {\n      if (fullscreen) {\n        // prevent scroll on fullscreen\n        document.body.style.overflow = 'hidden';\n      } else {\n        // get the original overflow only the first time\n        if (!originalOverflow.current) {\n          originalOverflow.current = window.getComputedStyle(document.body, null).overflow;\n        }\n        // reset to the original overflow\n        document.body.style.overflow = originalOverflow.current;\n      }\n    }\n  }, [fullscreen, originalOverflow, overflow]);\n  return /*#__PURE__*/_jsx(\"ul\", {\n    children: (props.commands || []).map((item, idx) => {\n      if (item.keyCommand === 'divider') {\n        return /*#__PURE__*/_jsx(\"li\", _extends({}, item.liProps, {\n          className: prefixCls + \"-toolbar-divider\"\n        }), idx);\n      }\n      if (!item.keyCommand) return /*#__PURE__*/_jsx(Fragment, {}, idx);\n      var activeBtn = fullscreen && item.keyCommand === 'fullscreen' || item.keyCommand === 'preview' && preview === item.value;\n      var childNode = item.children && typeof item.children === 'function' ? item.children({\n        getState: () => commandOrchestrator.getState(),\n        textApi: commandOrchestrator ? commandOrchestrator.textApi : undefined,\n        close: () => handleClick({}, item.groupName),\n        execute: () => handleClick({\n          execute: item.execute\n        }),\n        dispatch\n      }) : undefined;\n      var disabled = barPopup && preview && preview === 'preview' && !/(preview|fullscreen)/.test(item.keyCommand);\n      var render = (components == null ? void 0 : components.toolbar) || item.render;\n      var com = render && typeof render === 'function' ? render(item, !!disabled, handleClick, idx) : null;\n      return /*#__PURE__*/_jsxs(\"li\", _extends({}, item.liProps, {\n        className: activeBtn ? \"active\" : '',\n        children: [com && /*#__PURE__*/React.isValidElement(com) && com, !com && !item.buttonProps && item.icon, !com && item.buttonProps && /*#__PURE__*/React.createElement('button', _extends({\n          type: 'button',\n          key: idx,\n          disabled,\n          'data-name': item.name\n        }, item.buttonProps, {\n          onClick: evn => {\n            evn.stopPropagation();\n            handleClick(item, item.groupName);\n          }\n        }), item.icon), item.children && /*#__PURE__*/_jsx(Child, {\n          overflow: overflow,\n          groupName: item.groupName,\n          prefixCls: prefixCls,\n          children: childNode,\n          commands: Array.isArray(item.children) ? item.children : undefined\n        })]\n      }), idx);\n    })\n  });\n}\nexport default function Toolbar(props) {\n  if (props === void 0) {\n    props = {};\n  }\n  var {\n    prefixCls,\n    toolbarBottom,\n    isChild\n  } = props;\n  var {\n    commands,\n    extraCommands\n  } = useContext(EditorContext);\n  var bottomClassName = toolbarBottom ? 'bottom' : '';\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: prefixCls + \"-toolbar \" + bottomClassName,\n    children: [/*#__PURE__*/_jsx(ToolbarItems, _extends({}, props, {\n      commands: props.commands || commands || []\n    })), !isChild && /*#__PURE__*/_jsx(ToolbarItems, _extends({}, props, {\n      commands: extraCommands || []\n    }))]\n  });\n}","map":{"version":3,"names":["_extends","React","Fragment","useContext","useEffect","useRef","EditorContext","Child","jsx","_jsx","jsxs","_jsxs","ToolbarItems","props","prefixCls","overflow","fullscreen","preview","barPopup","components","commandOrchestrator","dispatch","originalOverflow","handleClick","command","name","state","keyCommand","value","commands","forEach","item","groupName","parent","Object","keys","keyName","length","executeCommand","document","body","style","current","window","getComputedStyle","children","map","idx","liProps","className","activeBtn","childNode","getState","textApi","undefined","close","execute","disabled","test","render","toolbar","com","isValidElement","buttonProps","icon","createElement","type","key","onClick","evn","stopPropagation","Array","isArray","Toolbar","toolbarBottom","isChild","extraCommands","bottomClassName"],"sources":["/Users/kanaiyuuta/Downloads/test-yuuta-main/node_modules/@uiw/react-md-editor/esm/components/Toolbar/index.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { Fragment, useContext, useEffect, useRef } from 'react';\nimport { EditorContext } from '../../Context';\nimport Child from './Child';\nimport \"./index.css\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport function ToolbarItems(props) {\n  var {\n    prefixCls,\n    overflow\n  } = props;\n  var {\n    fullscreen,\n    preview,\n    barPopup = {},\n    components,\n    commandOrchestrator,\n    dispatch\n  } = useContext(EditorContext);\n  var originalOverflow = useRef('');\n  function handleClick(command, name) {\n    if (!dispatch) return;\n    var state = {\n      barPopup: _extends({}, barPopup)\n    };\n    if (command.keyCommand === 'preview') {\n      state.preview = command.value;\n    }\n    if (command.keyCommand === 'fullscreen') {\n      state.fullscreen = !fullscreen;\n    }\n    if (props.commands && command.keyCommand === 'group') {\n      props.commands.forEach(item => {\n        if (name === item.groupName) {\n          state.barPopup[name] = true;\n        } else if (item.keyCommand) {\n          state.barPopup[item.groupName] = false;\n        }\n      });\n    } else if (name || command.parent) {\n      Object.keys(state.barPopup || {}).forEach(keyName => {\n        state.barPopup[keyName] = false;\n      });\n    }\n    if (Object.keys(state).length) {\n      dispatch(_extends({}, state));\n    }\n    commandOrchestrator && commandOrchestrator.executeCommand(command);\n  }\n  useEffect(() => {\n    if (document && overflow) {\n      if (fullscreen) {\n        // prevent scroll on fullscreen\n        document.body.style.overflow = 'hidden';\n      } else {\n        // get the original overflow only the first time\n        if (!originalOverflow.current) {\n          originalOverflow.current = window.getComputedStyle(document.body, null).overflow;\n        }\n        // reset to the original overflow\n        document.body.style.overflow = originalOverflow.current;\n      }\n    }\n  }, [fullscreen, originalOverflow, overflow]);\n  return /*#__PURE__*/_jsx(\"ul\", {\n    children: (props.commands || []).map((item, idx) => {\n      if (item.keyCommand === 'divider') {\n        return /*#__PURE__*/_jsx(\"li\", _extends({}, item.liProps, {\n          className: prefixCls + \"-toolbar-divider\"\n        }), idx);\n      }\n      if (!item.keyCommand) return /*#__PURE__*/_jsx(Fragment, {}, idx);\n      var activeBtn = fullscreen && item.keyCommand === 'fullscreen' || item.keyCommand === 'preview' && preview === item.value;\n      var childNode = item.children && typeof item.children === 'function' ? item.children({\n        getState: () => commandOrchestrator.getState(),\n        textApi: commandOrchestrator ? commandOrchestrator.textApi : undefined,\n        close: () => handleClick({}, item.groupName),\n        execute: () => handleClick({\n          execute: item.execute\n        }),\n        dispatch\n      }) : undefined;\n      var disabled = barPopup && preview && preview === 'preview' && !/(preview|fullscreen)/.test(item.keyCommand);\n      var render = (components == null ? void 0 : components.toolbar) || item.render;\n      var com = render && typeof render === 'function' ? render(item, !!disabled, handleClick, idx) : null;\n      return /*#__PURE__*/_jsxs(\"li\", _extends({}, item.liProps, {\n        className: activeBtn ? \"active\" : '',\n        children: [com && /*#__PURE__*/React.isValidElement(com) && com, !com && !item.buttonProps && item.icon, !com && item.buttonProps && /*#__PURE__*/React.createElement('button', _extends({\n          type: 'button',\n          key: idx,\n          disabled,\n          'data-name': item.name\n        }, item.buttonProps, {\n          onClick: evn => {\n            evn.stopPropagation();\n            handleClick(item, item.groupName);\n          }\n        }), item.icon), item.children && /*#__PURE__*/_jsx(Child, {\n          overflow: overflow,\n          groupName: item.groupName,\n          prefixCls: prefixCls,\n          children: childNode,\n          commands: Array.isArray(item.children) ? item.children : undefined\n        })]\n      }), idx);\n    })\n  });\n}\nexport default function Toolbar(props) {\n  if (props === void 0) {\n    props = {};\n  }\n  var {\n    prefixCls,\n    toolbarBottom,\n    isChild\n  } = props;\n  var {\n    commands,\n    extraCommands\n  } = useContext(EditorContext);\n  var bottomClassName = toolbarBottom ? 'bottom' : '';\n  return /*#__PURE__*/_jsxs(\"div\", {\n    className: prefixCls + \"-toolbar \" + bottomClassName,\n    children: [/*#__PURE__*/_jsx(ToolbarItems, _extends({}, props, {\n      commands: props.commands || commands || []\n    })), !isChild && /*#__PURE__*/_jsx(ToolbarItems, _extends({}, props, {\n      commands: extraCommands || []\n    }))]\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}