{"ast":null,"code":"import { insertTextAtPosition } from '../../utils/InsertTextAtPosition';\nimport { TextAreaTextApi } from '../../commands';\nimport { insertBeforeEachLine } from '../../commands/list';\n\n/**\n * - `13` - `Enter`\n * - `9` - `Tab`\n */\nfunction stopPropagation(e) {\n  e.stopPropagation();\n  e.preventDefault();\n}\nexport default function handleKeyDown(e, tabSize, defaultTabEnable) {\n  if (tabSize === void 0) {\n    tabSize = 2;\n  }\n  if (defaultTabEnable === void 0) {\n    defaultTabEnable = false;\n  }\n  var target = e.target;\n  var starVal = target.value.substr(0, target.selectionStart);\n  var valArr = starVal.split('\\n');\n  var currentLineStr = valArr[valArr.length - 1];\n  var textArea = new TextAreaTextApi(target);\n\n  /**\n   * `9` - `Tab`\n   */\n  if (!defaultTabEnable && e.code && e.code.toLowerCase() === 'tab') {\n    stopPropagation(e);\n    var space = new Array(tabSize + 1).join('  ');\n    if (target.selectionStart !== target.selectionEnd) {\n      var _star = target.value.substring(0, target.selectionStart).split('\\n');\n      var _end = target.value.substring(0, target.selectionEnd).split('\\n');\n      var modifiedTextLine = [];\n      _end.forEach((item, idx) => {\n        if (item !== _star[idx]) {\n          modifiedTextLine.push(item);\n        }\n      });\n      var modifiedText = modifiedTextLine.join('\\n');\n      var oldSelectText = target.value.substring(target.selectionStart, target.selectionEnd);\n      var newStarNum = target.value.substring(0, target.selectionStart).length;\n      textArea.setSelectionRange({\n        start: target.value.indexOf(modifiedText),\n        end: target.selectionEnd\n      });\n      var modifiedTextObj = insertBeforeEachLine(modifiedText, e.shiftKey ? '' : space);\n      var text = modifiedTextObj.modifiedText;\n      if (e.shiftKey) {\n        text = text.split('\\n').map(item => item.replace(new RegExp(\"^\" + space), '')).join('\\n');\n      }\n      textArea.replaceSelection(text);\n      var startTabSize = e.shiftKey ? -tabSize : tabSize;\n      var endTabSize = e.shiftKey ? -modifiedTextLine.length * tabSize : modifiedTextLine.length * tabSize;\n      textArea.setSelectionRange({\n        start: newStarNum + startTabSize,\n        end: newStarNum + oldSelectText.length + endTabSize\n      });\n    } else {\n      return insertTextAtPosition(target, space);\n    }\n  } else if (e.keyCode === 13 && e.code.toLowerCase() === 'enter' && (/^(-|\\*)\\s/.test(currentLineStr) || /^\\d+.\\s/.test(currentLineStr))) {\n    /**\n     * `13` - `Enter`\n     */\n    stopPropagation(e);\n    var startStr = '\\n- ';\n    if (currentLineStr.startsWith('*')) {\n      startStr = '\\n* ';\n    }\n    if (currentLineStr.startsWith('- [ ]')) {\n      startStr = '\\n- [ ] ';\n    } else if (currentLineStr.startsWith('- [X]')) {\n      startStr = '\\n- [X] ';\n    }\n    if (/^\\d+.\\s/.test(currentLineStr)) {\n      startStr = \"\\n\" + (parseInt(currentLineStr) + 1) + \". \";\n    }\n    return insertTextAtPosition(target, startStr);\n  }\n}","map":{"version":3,"names":["insertTextAtPosition","TextAreaTextApi","insertBeforeEachLine","stopPropagation","e","preventDefault","handleKeyDown","tabSize","defaultTabEnable","target","starVal","value","substr","selectionStart","valArr","split","currentLineStr","length","textArea","code","toLowerCase","space","Array","join","selectionEnd","_star","substring","_end","modifiedTextLine","forEach","item","idx","push","modifiedText","oldSelectText","newStarNum","setSelectionRange","start","indexOf","end","modifiedTextObj","shiftKey","text","map","replace","RegExp","replaceSelection","startTabSize","endTabSize","keyCode","test","startStr","startsWith","parseInt"],"sources":["/Users/kanaiyuuta/Downloads/test-yuuta-main/node_modules/@uiw/react-md-editor/esm/components/TextArea/handleKeyDown.js"],"sourcesContent":["import { insertTextAtPosition } from '../../utils/InsertTextAtPosition';\nimport { TextAreaTextApi } from '../../commands';\nimport { insertBeforeEachLine } from '../../commands/list';\n\n/**\n * - `13` - `Enter`\n * - `9` - `Tab`\n */\nfunction stopPropagation(e) {\n  e.stopPropagation();\n  e.preventDefault();\n}\nexport default function handleKeyDown(e, tabSize, defaultTabEnable) {\n  if (tabSize === void 0) {\n    tabSize = 2;\n  }\n  if (defaultTabEnable === void 0) {\n    defaultTabEnable = false;\n  }\n  var target = e.target;\n  var starVal = target.value.substr(0, target.selectionStart);\n  var valArr = starVal.split('\\n');\n  var currentLineStr = valArr[valArr.length - 1];\n  var textArea = new TextAreaTextApi(target);\n\n  /**\n   * `9` - `Tab`\n   */\n  if (!defaultTabEnable && e.code && e.code.toLowerCase() === 'tab') {\n    stopPropagation(e);\n    var space = new Array(tabSize + 1).join('  ');\n    if (target.selectionStart !== target.selectionEnd) {\n      var _star = target.value.substring(0, target.selectionStart).split('\\n');\n      var _end = target.value.substring(0, target.selectionEnd).split('\\n');\n      var modifiedTextLine = [];\n      _end.forEach((item, idx) => {\n        if (item !== _star[idx]) {\n          modifiedTextLine.push(item);\n        }\n      });\n      var modifiedText = modifiedTextLine.join('\\n');\n      var oldSelectText = target.value.substring(target.selectionStart, target.selectionEnd);\n      var newStarNum = target.value.substring(0, target.selectionStart).length;\n      textArea.setSelectionRange({\n        start: target.value.indexOf(modifiedText),\n        end: target.selectionEnd\n      });\n      var modifiedTextObj = insertBeforeEachLine(modifiedText, e.shiftKey ? '' : space);\n      var text = modifiedTextObj.modifiedText;\n      if (e.shiftKey) {\n        text = text.split('\\n').map(item => item.replace(new RegExp(\"^\" + space), '')).join('\\n');\n      }\n      textArea.replaceSelection(text);\n      var startTabSize = e.shiftKey ? -tabSize : tabSize;\n      var endTabSize = e.shiftKey ? -modifiedTextLine.length * tabSize : modifiedTextLine.length * tabSize;\n      textArea.setSelectionRange({\n        start: newStarNum + startTabSize,\n        end: newStarNum + oldSelectText.length + endTabSize\n      });\n    } else {\n      return insertTextAtPosition(target, space);\n    }\n  } else if (e.keyCode === 13 && e.code.toLowerCase() === 'enter' && (/^(-|\\*)\\s/.test(currentLineStr) || /^\\d+.\\s/.test(currentLineStr))) {\n    /**\n     * `13` - `Enter`\n     */\n    stopPropagation(e);\n    var startStr = '\\n- ';\n    if (currentLineStr.startsWith('*')) {\n      startStr = '\\n* ';\n    }\n    if (currentLineStr.startsWith('- [ ]')) {\n      startStr = '\\n- [ ] ';\n    } else if (currentLineStr.startsWith('- [X]')) {\n      startStr = '\\n- [X] ';\n    }\n    if (/^\\d+.\\s/.test(currentLineStr)) {\n      startStr = \"\\n\" + (parseInt(currentLineStr) + 1) + \". \";\n    }\n    return insertTextAtPosition(target, startStr);\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}