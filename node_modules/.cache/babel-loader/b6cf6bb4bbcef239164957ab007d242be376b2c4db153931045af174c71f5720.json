{"ast":null,"code":"import { stringify } from '../utils/stringify.js';\nimport { BaseError } from './base.js';\nimport { getUrl } from './utils.js';\nexport class HttpRequestError extends BaseError {\n  constructor(_ref) {\n    let {\n      body,\n      details,\n      headers,\n      status,\n      url\n    } = _ref;\n    super('HTTP request failed.', {\n      details,\n      metaMessages: [status && `Status: ${status}`, `URL: ${getUrl(url)}`, body && `Request body: ${stringify(body)}`].filter(Boolean)\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'HttpRequestError'\n    });\n    Object.defineProperty(this, \"body\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"headers\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"status\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, \"url\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.body = body;\n    this.headers = headers;\n    this.status = status;\n    this.url = url;\n  }\n}\nexport class WebSocketRequestError extends BaseError {\n  constructor(_ref2) {\n    let {\n      body,\n      details,\n      url\n    } = _ref2;\n    super('WebSocket request failed.', {\n      details,\n      metaMessages: [`URL: ${getUrl(url)}`, `Request body: ${stringify(body)}`]\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'WebSocketRequestError'\n    });\n  }\n}\nexport class RpcRequestError extends BaseError {\n  constructor(_ref3) {\n    let {\n      body,\n      error,\n      url\n    } = _ref3;\n    super('RPC Request failed.', {\n      cause: error,\n      details: error.message,\n      metaMessages: [`URL: ${getUrl(url)}`, `Request body: ${stringify(body)}`]\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'RpcRequestError'\n    });\n    Object.defineProperty(this, \"code\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: void 0\n    });\n    this.code = error.code;\n  }\n}\nexport class TimeoutError extends BaseError {\n  constructor(_ref4) {\n    let {\n      body,\n      url\n    } = _ref4;\n    super('The request took too long to respond.', {\n      details: 'The request timed out.',\n      metaMessages: [`URL: ${getUrl(url)}`, `Request body: ${stringify(body)}`]\n    });\n    Object.defineProperty(this, \"name\", {\n      enumerable: true,\n      configurable: true,\n      writable: true,\n      value: 'TimeoutError'\n    });\n  }\n}","map":{"version":3,"names":["stringify","BaseError","getUrl","HttpRequestError","constructor","_ref","body","details","headers","status","url","metaMessages","filter","Boolean","Object","defineProperty","WebSocketRequestError","_ref2","RpcRequestError","_ref3","error","cause","message","code","TimeoutError","_ref4"],"sources":["/Users/kanaiyuuta/Downloads/test-yuuta-main/node_modules/viem/errors/request.ts"],"sourcesContent":["import { stringify } from '../utils/stringify.js'\n\nimport { BaseError } from './base.js'\nimport { getUrl } from './utils.js'\n\nexport class HttpRequestError extends BaseError {\n  override name = 'HttpRequestError'\n\n  body?: { [x: string]: unknown } | { [y: string]: unknown }[]\n  headers?: Headers\n  status?: number\n  url: string\n\n  constructor({\n    body,\n    details,\n    headers,\n    status,\n    url,\n  }: {\n    body?: { [x: string]: unknown } | { [y: string]: unknown }[]\n    details?: string\n    headers?: Headers\n    status?: number\n    url: string\n  }) {\n    super('HTTP request failed.', {\n      details,\n      metaMessages: [\n        status && `Status: ${status}`,\n        `URL: ${getUrl(url)}`,\n        body && `Request body: ${stringify(body)}`,\n      ].filter(Boolean) as string[],\n    })\n    this.body = body\n    this.headers = headers\n    this.status = status\n    this.url = url\n  }\n}\n\nexport class WebSocketRequestError extends BaseError {\n  override name = 'WebSocketRequestError'\n\n  constructor({\n    body,\n    details,\n    url,\n  }: {\n    body: { [key: string]: unknown }\n    details: string\n    url: string\n  }) {\n    super('WebSocket request failed.', {\n      details,\n      metaMessages: [`URL: ${getUrl(url)}`, `Request body: ${stringify(body)}`],\n    })\n  }\n}\n\nexport class RpcRequestError extends BaseError {\n  override name = 'RpcRequestError'\n\n  code: number\n\n  constructor({\n    body,\n    error,\n    url,\n  }: {\n    body: { [x: string]: unknown } | { [y: string]: unknown }[]\n    error: { code: number; message: string }\n    url: string\n  }) {\n    super('RPC Request failed.', {\n      cause: error as any,\n      details: error.message,\n      metaMessages: [`URL: ${getUrl(url)}`, `Request body: ${stringify(body)}`],\n    })\n    this.code = error.code\n  }\n}\n\nexport class TimeoutError extends BaseError {\n  override name = 'TimeoutError'\n\n  constructor({\n    body,\n    url,\n  }: {\n    body: { [x: string]: unknown } | { [y: string]: unknown }[]\n    url: string\n  }) {\n    super('The request took too long to respond.', {\n      details: 'The request timed out.',\n      metaMessages: [`URL: ${getUrl(url)}`, `Request body: ${stringify(body)}`],\n    })\n  }\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,uBAAuB;AAEjD,SAASC,SAAS,QAAQ,WAAW;AACrC,SAASC,MAAM,QAAQ,YAAY;AAEnC,OAAM,MAAOC,gBAAiB,SAAQF,SAAS;EAQ7CG,YAAAC,IAAA,EAYC;IAAA,IAZW;MACVC,IAAI;MACJC,OAAO;MACPC,OAAO;MACPC,MAAM;MACNC;IAAG,CAOJ,GAAAL,IAAA;IACC,KAAK,CAAC,sBAAsB,EAAE;MAC5BE,OAAO;MACPI,YAAY,EAAE,CACZF,MAAM,IAAI,WAAWA,MAAM,EAAE,EAC7B,QAAQP,MAAM,CAACQ,GAAG,CAAC,EAAE,EACrBJ,IAAI,IAAI,iBAAiBN,SAAS,CAACM,IAAI,CAAC,EAAE,CAC3C,CAACM,MAAM,CAACC,OAAO;KACjB,CAAC;IA3BKC,MAAA,CAAAC,cAAA;;;;aAAO;;IAEhBD,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;;;IACAD,MAAA,CAAAC,cAAA;;;;;;IAuBE,IAAI,CAACT,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACE,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,GAAG,GAAGA,GAAG;EAChB;;AAGF,OAAM,MAAOM,qBAAsB,SAAQf,SAAS;EAGlDG,YAAAa,KAAA,EAQC;IAAA,IARW;MACVX,IAAI;MACJC,OAAO;MACPG;IAAG,CAKJ,GAAAO,KAAA;IACC,KAAK,CAAC,2BAA2B,EAAE;MACjCV,OAAO;MACPI,YAAY,EAAE,CAAC,QAAQT,MAAM,CAACQ,GAAG,CAAC,EAAE,EAAE,iBAAiBV,SAAS,CAACM,IAAI,CAAC,EAAE;KACzE,CAAC;IAdKQ,MAAA,CAAAC,cAAA;;;;aAAO;;EAehB;;AAGF,OAAM,MAAOG,eAAgB,SAAQjB,SAAS;EAK5CG,YAAAe,KAAA,EAQC;IAAA,IARW;MACVb,IAAI;MACJc,KAAK;MACLV;IAAG,CAKJ,GAAAS,KAAA;IACC,KAAK,CAAC,qBAAqB,EAAE;MAC3BE,KAAK,EAAED,KAAY;MACnBb,OAAO,EAAEa,KAAK,CAACE,OAAO;MACtBX,YAAY,EAAE,CAAC,QAAQT,MAAM,CAACQ,GAAG,CAAC,EAAE,EAAE,iBAAiBV,SAAS,CAACM,IAAI,CAAC,EAAE;KACzE,CAAC;IAjBKQ,MAAA,CAAAC,cAAA;;;;aAAO;;IAEhBD,MAAA,CAAAC,cAAA;;;;;;IAgBE,IAAI,CAACQ,IAAI,GAAGH,KAAK,CAACG,IAAI;EACxB;;AAGF,OAAM,MAAOC,YAAa,SAAQvB,SAAS;EAGzCG,YAAAqB,KAAA,EAMC;IAAA,IANW;MACVnB,IAAI;MACJI;IAAG,CAIJ,GAAAe,KAAA;IACC,KAAK,CAAC,uCAAuC,EAAE;MAC7ClB,OAAO,EAAE,wBAAwB;MACjCI,YAAY,EAAE,CAAC,QAAQT,MAAM,CAACQ,GAAG,CAAC,EAAE,EAAE,iBAAiBV,SAAS,CAACM,IAAI,CAAC,EAAE;KACzE,CAAC;IAZKQ,MAAA,CAAAC,cAAA;;;;aAAO;;EAahB"},"metadata":{},"sourceType":"module","externalDependencies":[]}