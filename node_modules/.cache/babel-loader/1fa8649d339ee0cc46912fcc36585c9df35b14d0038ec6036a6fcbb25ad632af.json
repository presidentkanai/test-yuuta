{"ast":null,"code":"/**\n * @typedef {import('./types.js').Selectors} Selectors\n * @typedef {import('./types.js').RuleSet} RuleSet\n */\n\nimport { CssSelectorParser } from 'css-selector-parser';\nconst parser = new CssSelectorParser();\nparser.registerAttrEqualityMods('~', '|', '^', '$', '*');\nparser.registerSelectorPseudos('any', 'matches', 'not', 'has');\nparser.registerNestingOperators('>', '+', '~');\n\n/**\n * @param {string} selector\n * @returns {Selectors | RuleSet | null}\n */\nexport function parse(selector) {\n  if (typeof selector !== 'string') {\n    throw new TypeError('Expected `string` as selector, not `' + selector + '`');\n  }\n  return parser.parse(selector);\n}","map":{"version":3,"names":["CssSelectorParser","parser","registerAttrEqualityMods","registerSelectorPseudos","registerNestingOperators","parse","selector","TypeError"],"sources":["/Users/kanaiyuuta/Downloads/test-yuuta-main/node_modules/hast-util-select/lib/parse.js"],"sourcesContent":["/**\n * @typedef {import('./types.js').Selectors} Selectors\n * @typedef {import('./types.js').RuleSet} RuleSet\n */\n\nimport {CssSelectorParser} from 'css-selector-parser'\n\nconst parser = new CssSelectorParser()\n\nparser.registerAttrEqualityMods('~', '|', '^', '$', '*')\nparser.registerSelectorPseudos('any', 'matches', 'not', 'has')\nparser.registerNestingOperators('>', '+', '~')\n\n/**\n * @param {string} selector\n * @returns {Selectors | RuleSet | null}\n */\nexport function parse(selector) {\n  if (typeof selector !== 'string') {\n    throw new TypeError('Expected `string` as selector, not `' + selector + '`')\n  }\n\n  return parser.parse(selector)\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,SAAQA,iBAAiB,QAAO,qBAAqB;AAErD,MAAMC,MAAM,GAAG,IAAID,iBAAiB,CAAC,CAAC;AAEtCC,MAAM,CAACC,wBAAwB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AACxDD,MAAM,CAACE,uBAAuB,CAAC,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,CAAC;AAC9DF,MAAM,CAACG,wBAAwB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;;AAE9C;AACA;AACA;AACA;AACA,OAAO,SAASC,KAAKA,CAACC,QAAQ,EAAE;EAC9B,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;IAChC,MAAM,IAAIC,SAAS,CAAC,sCAAsC,GAAGD,QAAQ,GAAG,GAAG,CAAC;EAC9E;EAEA,OAAOL,MAAM,CAACI,KAAK,CAACC,QAAQ,CAAC;AAC/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}