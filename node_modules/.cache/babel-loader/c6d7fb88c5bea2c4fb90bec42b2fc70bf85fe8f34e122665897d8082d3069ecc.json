{"ast":null,"code":"import { hashTypedData } from './hashTypedData.js';\nimport { recoverAddress } from './recoverAddress.js';\nexport async function recoverTypedDataAddress(_ref) {\n  let {\n    domain,\n    message,\n    primaryType,\n    signature,\n    types\n  } = _ref;\n  return recoverAddress({\n    hash: hashTypedData({\n      domain,\n      message,\n      primaryType,\n      types\n    }),\n    signature\n  });\n}","map":{"version":3,"names":["hashTypedData","recoverAddress","recoverTypedDataAddress","_ref","domain","message","primaryType","signature","types","hash"],"sources":["/Users/kanaiyuuta/Downloads/test-yuuta-main/node_modules/viem/utils/signature/recoverTypedDataAddress.ts"],"sourcesContent":["import type { Address, TypedData } from 'abitype'\n\nimport type { ByteArray, Hex } from '../../types/misc.js'\nimport type { TypedDataDefinition } from '../../types/typedData.js'\n\nimport { hashTypedData } from './hashTypedData.js'\nimport { recoverAddress } from './recoverAddress.js'\n\nexport type RecoverTypedDataAddressParameters<\n  TTypedData extends TypedData | { [key: string]: unknown } = TypedData,\n  TPrimaryType extends string = string,\n> = TypedDataDefinition<TTypedData, TPrimaryType> & {\n  signature: Hex | ByteArray\n}\nexport type RecoverTypedDataAddressReturnType = Address\n\nexport async function recoverTypedDataAddress<\n  const TTypedData extends TypedData | { [key: string]: unknown },\n  TPrimaryType extends string = string,\n>({\n  domain,\n  message,\n  primaryType,\n  signature,\n  types,\n}: RecoverTypedDataAddressParameters<\n  TTypedData,\n  TPrimaryType\n>): Promise<RecoverTypedDataAddressReturnType> {\n  return recoverAddress({\n    hash: hashTypedData({\n      domain,\n      message,\n      primaryType,\n      types,\n    } as unknown as RecoverTypedDataAddressParameters),\n    signature,\n  })\n}\n"],"mappings":"AAKA,SAASA,aAAa,QAAQ,oBAAoB;AAClD,SAASC,cAAc,QAAQ,qBAAqB;AAUpD,OAAO,eAAeC,uBAAuBA,CAAAC,IAAA,EAY5C;EAAA,IATC;IACAC,MAAM;IACNC,OAAO;IACPC,WAAW;IACXC,SAAS;IACTC;EAAK,CAIN,GAAAL,IAAA;EACC,OAAOF,cAAc,CAAC;IACpBQ,IAAI,EAAET,aAAa,CAAC;MAClBI,MAAM;MACNC,OAAO;MACPC,WAAW;MACXE;KAC+C,CAAC;IAClDD;GACD,CAAC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}