{"ast":null,"code":"import { AbiFunctionNotFoundError, AbiFunctionOutputsNotFoundError } from '../../errors/abi.js';\nimport { encodeAbiParameters } from './encodeAbiParameters.js';\nimport { getAbiItem } from './getAbiItem.js';\nconst docsPath = '/docs/contract/encodeFunctionResult';\nexport function encodeFunctionResult(_ref) {\n  let {\n    abi,\n    functionName,\n    result\n  } = _ref;\n  let abiItem = abi[0];\n  if (functionName) {\n    abiItem = getAbiItem({\n      abi,\n      name: functionName\n    });\n    if (!abiItem) throw new AbiFunctionNotFoundError(functionName, {\n      docsPath: '/docs/contract/encodeFunctionResult'\n    });\n  }\n  if (abiItem.type !== 'function') throw new AbiFunctionNotFoundError(undefined, {\n    docsPath: '/docs/contract/encodeFunctionResult'\n  });\n  if (!abiItem.outputs) throw new AbiFunctionOutputsNotFoundError(abiItem.name, {\n    docsPath\n  });\n  let values = Array.isArray(result) ? result : [result];\n  if (abiItem.outputs.length === 0 && !values[0]) values = [];\n  return encodeAbiParameters(abiItem.outputs, values);\n}","map":{"version":3,"names":["AbiFunctionNotFoundError","AbiFunctionOutputsNotFoundError","encodeAbiParameters","getAbiItem","docsPath","encodeFunctionResult","_ref","abi","functionName","result","abiItem","name","type","undefined","outputs","values","Array","isArray","length"],"sources":["/Users/kanaiyuuta/Downloads/test-yuuta-main/node_modules/viem/utils/abi/encodeFunctionResult.ts"],"sourcesContent":["import type { Abi } from 'abitype'\n\nimport {\n  AbiFunctionNotFoundError,\n  AbiFunctionOutputsNotFoundError,\n} from '../../errors/abi.js'\nimport type {\n  AbiItem,\n  ContractFunctionResult,\n  InferFunctionName,\n} from '../../types/contract.js'\n\nimport { encodeAbiParameters } from './encodeAbiParameters.js'\nimport { type GetAbiItemParameters, getAbiItem } from './getAbiItem.js'\n\nconst docsPath = '/docs/contract/encodeFunctionResult'\n\nexport type EncodeFunctionResultParameters<\n  TAbi extends Abi | readonly unknown[] = Abi,\n  TFunctionName extends string | undefined = string,\n  _FunctionName = InferFunctionName<TAbi, TFunctionName>,\n> = {\n  functionName?: _FunctionName\n} & (TFunctionName extends string\n  ? { abi: TAbi; result?: ContractFunctionResult<TAbi, TFunctionName> }\n  : _FunctionName extends string\n  ? {\n      abi: [TAbi[number]]\n      result?: ContractFunctionResult<TAbi, _FunctionName>\n    }\n  : never)\n\nexport function encodeFunctionResult<\n  const TAbi extends Abi | readonly unknown[],\n  TFunctionName extends string | undefined = undefined,\n>({\n  abi,\n  functionName,\n  result,\n}: EncodeFunctionResultParameters<TAbi, TFunctionName>) {\n  let abiItem = abi[0] as AbiItem\n  if (functionName) {\n    abiItem = getAbiItem({\n      abi,\n      name: functionName,\n    } as GetAbiItemParameters)\n    if (!abiItem)\n      throw new AbiFunctionNotFoundError(functionName, {\n        docsPath: '/docs/contract/encodeFunctionResult',\n      })\n  }\n\n  if (abiItem.type !== 'function')\n    throw new AbiFunctionNotFoundError(undefined, {\n      docsPath: '/docs/contract/encodeFunctionResult',\n    })\n\n  if (!abiItem.outputs)\n    throw new AbiFunctionOutputsNotFoundError(abiItem.name, { docsPath })\n\n  let values = Array.isArray(result) ? result : [result]\n  if (abiItem.outputs.length === 0 && !values[0]) values = []\n\n  return encodeAbiParameters(abiItem.outputs, values)\n}\n"],"mappings":"AAEA,SACEA,wBAAwB,EACxBC,+BAA+B,QAC1B,qBAAqB;AAO5B,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAAoCC,UAAU,QAAQ,iBAAiB;AAEvE,MAAMC,QAAQ,GAAG,qCAAqC;AAiBtD,OAAM,SAAUC,oBAAoBA,CAAAC,IAAA,EAOkB;EAAA,IAJpD;IACAC,GAAG;IACHC,YAAY;IACZC;EAAM,CAC8C,GAAAH,IAAA;EACpD,IAAII,OAAO,GAAGH,GAAG,CAAC,CAAC,CAAY;EAC/B,IAAIC,YAAY,EAAE;IAChBE,OAAO,GAAGP,UAAU,CAAC;MACnBI,GAAG;MACHI,IAAI,EAAEH;KACiB,CAAC;IAC1B,IAAI,CAACE,OAAO,EACV,MAAM,IAAIV,wBAAwB,CAACQ,YAAY,EAAE;MAC/CJ,QAAQ,EAAE;KACX,CAAC;;EAGN,IAAIM,OAAO,CAACE,IAAI,KAAK,UAAU,EAC7B,MAAM,IAAIZ,wBAAwB,CAACa,SAAS,EAAE;IAC5CT,QAAQ,EAAE;GACX,CAAC;EAEJ,IAAI,CAACM,OAAO,CAACI,OAAO,EAClB,MAAM,IAAIb,+BAA+B,CAACS,OAAO,CAACC,IAAI,EAAE;IAAEP;EAAQ,CAAE,CAAC;EAEvE,IAAIW,MAAM,GAAGC,KAAK,CAACC,OAAO,CAACR,MAAM,CAAC,GAAGA,MAAM,GAAG,CAACA,MAAM,CAAC;EACtD,IAAIC,OAAO,CAACI,OAAO,CAACI,MAAM,KAAK,CAAC,IAAI,CAACH,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,GAAG,EAAE;EAE3D,OAAOb,mBAAmB,CAACQ,OAAO,CAACI,OAAO,EAAEC,MAAM,CAAC;AACrD"},"metadata":{},"sourceType":"module","externalDependencies":[]}