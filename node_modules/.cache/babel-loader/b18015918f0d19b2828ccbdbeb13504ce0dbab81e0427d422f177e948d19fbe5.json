{"ast":null,"code":"import { secp256k1 } from '@noble/curves/secp256k1';\nimport { numberToHex } from '../../utils/encoding/toHex.js';\n/**\n * @description Parses a hex formatted signature into a structured signature.\n *\n * @param signatureHex Signature in hex format.\n * @returns The structured signature.\n *\n * @example\n * hexToSignature('0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db81c')\n * // { r: '0x...', s: '0x...', v: 28n }\n */\nexport function hexToSignature(signatureHex) {\n  const {\n    r,\n    s\n  } = secp256k1.Signature.fromCompact(signatureHex.slice(2, 130));\n  const v = BigInt(`0x${signatureHex.slice(130)}`);\n  return {\n    r: numberToHex(r, {\n      size: 32\n    }),\n    s: numberToHex(s, {\n      size: 32\n    }),\n    v\n  };\n}","map":{"version":3,"names":["secp256k1","numberToHex","hexToSignature","signatureHex","r","s","Signature","fromCompact","slice","v","BigInt","size"],"sources":["/Users/kanaiyuuta/Downloads/test-yuuta-main/node_modules/viem/utils/signature/hexToSignature.ts"],"sourcesContent":["import { secp256k1 } from '@noble/curves/secp256k1'\n\nimport type { Hex, Signature } from '../../types/misc.js'\nimport { numberToHex } from '../../utils/encoding/toHex.js'\n\n/**\n * @description Parses a hex formatted signature into a structured signature.\n *\n * @param signatureHex Signature in hex format.\n * @returns The structured signature.\n *\n * @example\n * hexToSignature('0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db81c')\n * // { r: '0x...', s: '0x...', v: 28n }\n */\nexport function hexToSignature(signatureHex: Hex): Signature {\n  const { r, s } = secp256k1.Signature.fromCompact(signatureHex.slice(2, 130))\n  const v = BigInt(`0x${signatureHex.slice(130)}`)\n  return { r: numberToHex(r, { size: 32 }), s: numberToHex(s, { size: 32 }), v }\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,yBAAyB;AAGnD,SAASC,WAAW,QAAQ,+BAA+B;AAE3D;;;;;;;;;;AAUA,OAAM,SAAUC,cAAcA,CAACC,YAAiB;EAC9C,MAAM;IAAEC,CAAC;IAAEC;EAAC,CAAE,GAAGL,SAAS,CAACM,SAAS,CAACC,WAAW,CAACJ,YAAY,CAACK,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;EAC5E,MAAMC,CAAC,GAAGC,MAAM,CAAC,KAAKP,YAAY,CAACK,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC;EAChD,OAAO;IAAEJ,CAAC,EAAEH,WAAW,CAACG,CAAC,EAAE;MAAEO,IAAI,EAAE;IAAE,CAAE,CAAC;IAAEN,CAAC,EAAEJ,WAAW,CAACI,CAAC,EAAE;MAAEM,IAAI,EAAE;IAAE,CAAE,CAAC;IAAEF;EAAC,CAAE;AAChF"},"metadata":{},"sourceType":"module","externalDependencies":[]}