{"ast":null,"code":"import { InvalidLegacyVError } from '../../errors/transaction.js';\nimport { concatHex } from '../data/concat.js';\nimport { trim } from '../data/trim.js';\nimport { toHex } from '../encoding/toHex.js';\nimport { toRlp } from '../encoding/toRlp.js';\nimport { assertTransactionEIP1559, assertTransactionEIP2930, assertTransactionLegacy } from './assertTransaction.js';\nimport { getTransactionType } from './getTransactionType.js';\nimport { serializeAccessList } from './serializeAccessList.js';\nexport function serializeTransaction(transaction, signature) {\n  const type = getTransactionType(transaction);\n  if (type === 'eip1559') return serializeTransactionEIP1559(transaction, signature);\n  if (type === 'eip2930') return serializeTransactionEIP2930(transaction, signature);\n  return serializeTransactionLegacy(transaction, signature);\n}\nfunction serializeTransactionEIP1559(transaction, signature) {\n  const {\n    chainId,\n    gas,\n    nonce,\n    to,\n    value,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    accessList,\n    data\n  } = transaction;\n  assertTransactionEIP1559(transaction);\n  const serializedAccessList = serializeAccessList(accessList);\n  const serializedTransaction = [toHex(chainId), nonce ? toHex(nonce) : '0x', maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x', maxFeePerGas ? toHex(maxFeePerGas) : '0x', gas ? toHex(gas) : '0x', to !== null && to !== void 0 ? to : '0x', value ? toHex(value) : '0x', data !== null && data !== void 0 ? data : '0x', serializedAccessList];\n  if (signature) serializedTransaction.push(signature.v === 27n ? '0x' : toHex(1),\n  // yParity\n  trim(signature.r), trim(signature.s));\n  return concatHex(['0x02', toRlp(serializedTransaction)]);\n}\nfunction serializeTransactionEIP2930(transaction, signature) {\n  const {\n    chainId,\n    gas,\n    data,\n    nonce,\n    to,\n    value,\n    accessList,\n    gasPrice\n  } = transaction;\n  assertTransactionEIP2930(transaction);\n  const serializedAccessList = serializeAccessList(accessList);\n  const serializedTransaction = [toHex(chainId), nonce ? toHex(nonce) : '0x', gasPrice ? toHex(gasPrice) : '0x', gas ? toHex(gas) : '0x', to !== null && to !== void 0 ? to : '0x', value ? toHex(value) : '0x', data !== null && data !== void 0 ? data : '0x', serializedAccessList];\n  if (signature) serializedTransaction.push(signature.v === 27n ? '0x' : toHex(1),\n  // yParity\n  signature.r, signature.s);\n  return concatHex(['0x01', toRlp(serializedTransaction)]);\n}\nfunction serializeTransactionLegacy(transaction, signature) {\n  const {\n    chainId = 0,\n    gas,\n    data,\n    nonce,\n    to,\n    value,\n    gasPrice\n  } = transaction;\n  assertTransactionLegacy(transaction);\n  let serializedTransaction = [nonce ? toHex(nonce) : '0x', gasPrice ? toHex(gasPrice) : '0x', gas ? toHex(gas) : '0x', to !== null && to !== void 0 ? to : '0x', value ? toHex(value) : '0x', data !== null && data !== void 0 ? data : '0x'];\n  if (signature) {\n    let v = 27n + (signature.v === 27n ? 0n : 1n);\n    if (chainId > 0) v = BigInt(chainId * 2) + BigInt(35n + signature.v - 27n);else if (signature.v !== v) throw new InvalidLegacyVError({\n      v: signature.v\n    });\n    serializedTransaction = [...serializedTransaction, toHex(v), signature.r, signature.s];\n  } else if (chainId > 0) {\n    serializedTransaction = [...serializedTransaction, toHex(chainId), '0x', '0x'];\n  }\n  return toRlp(serializedTransaction);\n}","map":{"version":3,"names":["InvalidLegacyVError","concatHex","trim","toHex","toRlp","assertTransactionEIP1559","assertTransactionEIP2930","assertTransactionLegacy","getTransactionType","serializeAccessList","serializeTransaction","transaction","signature","type","serializeTransactionEIP1559","serializeTransactionEIP2930","serializeTransactionLegacy","chainId","gas","nonce","to","value","maxFeePerGas","maxPriorityFeePerGas","accessList","data","serializedAccessList","serializedTransaction","push","v","r","s","gasPrice","BigInt"],"sources":["/Users/kanaiyuuta/Downloads/test-yuuta-main/node_modules/viem/utils/transaction/serializeTransaction.ts"],"sourcesContent":["import { InvalidLegacyVError } from '../../errors/transaction.js'\nimport type { Signature } from '../../types/misc.js'\nimport type {\n  TransactionSerializable,\n  TransactionSerializableEIP1559,\n  TransactionSerializableEIP2930,\n  TransactionSerializableLegacy,\n  TransactionSerialized,\n  TransactionSerializedEIP1559,\n  TransactionSerializedEIP2930,\n  TransactionSerializedLegacy,\n  TransactionType,\n} from '../../types/transaction.js'\nimport { concatHex } from '../data/concat.js'\nimport { trim } from '../data/trim.js'\nimport { toHex } from '../encoding/toHex.js'\nimport { toRlp } from '../encoding/toRlp.js'\n\nimport {\n  assertTransactionEIP1559,\n  assertTransactionEIP2930,\n  assertTransactionLegacy,\n} from './assertTransaction.js'\nimport {\n  type GetTransactionType,\n  getTransactionType,\n} from './getTransactionType.js'\nimport { serializeAccessList } from './serializeAccessList.js'\n\nexport type SerializedTransactionReturnType<\n  TTransactionSerializable extends TransactionSerializable = TransactionSerializable,\n  TTransactionType extends TransactionType = GetTransactionType<TTransactionSerializable>,\n> = TransactionSerialized<TTransactionType>\n\nexport type SerializeTransactionFn<\n  TTransactionSerializable extends TransactionSerializable = TransactionSerializable,\n> = typeof serializeTransaction<TTransactionSerializable>\n\nexport function serializeTransaction<\n  TTransactionSerializable extends TransactionSerializable,\n>(\n  transaction: TTransactionSerializable,\n  signature?: Signature,\n): SerializedTransactionReturnType<TTransactionSerializable> {\n  const type = getTransactionType(transaction) as GetTransactionType\n\n  if (type === 'eip1559')\n    return serializeTransactionEIP1559(\n      transaction as TransactionSerializableEIP1559,\n      signature,\n    ) as SerializedTransactionReturnType<TTransactionSerializable>\n\n  if (type === 'eip2930')\n    return serializeTransactionEIP2930(\n      transaction as TransactionSerializableEIP2930,\n      signature,\n    ) as SerializedTransactionReturnType<TTransactionSerializable>\n\n  return serializeTransactionLegacy(\n    transaction as TransactionSerializableLegacy,\n    signature,\n  ) as SerializedTransactionReturnType<TTransactionSerializable>\n}\n\nfunction serializeTransactionEIP1559(\n  transaction: TransactionSerializableEIP1559,\n  signature?: Signature,\n): TransactionSerializedEIP1559 {\n  const {\n    chainId,\n    gas,\n    nonce,\n    to,\n    value,\n    maxFeePerGas,\n    maxPriorityFeePerGas,\n    accessList,\n    data,\n  } = transaction\n\n  assertTransactionEIP1559(transaction)\n\n  const serializedAccessList = serializeAccessList(accessList)\n\n  const serializedTransaction = [\n    toHex(chainId),\n    nonce ? toHex(nonce) : '0x',\n    maxPriorityFeePerGas ? toHex(maxPriorityFeePerGas) : '0x',\n    maxFeePerGas ? toHex(maxFeePerGas) : '0x',\n    gas ? toHex(gas) : '0x',\n    to ?? '0x',\n    value ? toHex(value) : '0x',\n    data ?? '0x',\n    serializedAccessList,\n  ]\n\n  if (signature)\n    serializedTransaction.push(\n      signature.v === 27n ? '0x' : toHex(1), // yParity\n      trim(signature.r),\n      trim(signature.s),\n    )\n\n  return concatHex([\n    '0x02',\n    toRlp(serializedTransaction),\n  ]) as TransactionSerializedEIP1559\n}\n\nfunction serializeTransactionEIP2930(\n  transaction: TransactionSerializableEIP2930,\n  signature?: Signature,\n): TransactionSerializedEIP2930 {\n  const { chainId, gas, data, nonce, to, value, accessList, gasPrice } =\n    transaction\n\n  assertTransactionEIP2930(transaction)\n\n  const serializedAccessList = serializeAccessList(accessList)\n\n  const serializedTransaction = [\n    toHex(chainId),\n    nonce ? toHex(nonce) : '0x',\n    gasPrice ? toHex(gasPrice) : '0x',\n    gas ? toHex(gas) : '0x',\n    to ?? '0x',\n    value ? toHex(value) : '0x',\n    data ?? '0x',\n    serializedAccessList,\n  ]\n\n  if (signature)\n    serializedTransaction.push(\n      signature.v === 27n ? '0x' : toHex(1), // yParity\n      signature.r,\n      signature.s,\n    )\n\n  return concatHex([\n    '0x01',\n    toRlp(serializedTransaction),\n  ]) as TransactionSerializedEIP2930\n}\n\nfunction serializeTransactionLegacy(\n  transaction: TransactionSerializableLegacy,\n  signature?: Signature,\n): TransactionSerializedLegacy {\n  const { chainId = 0, gas, data, nonce, to, value, gasPrice } = transaction\n\n  assertTransactionLegacy(transaction)\n\n  let serializedTransaction = [\n    nonce ? toHex(nonce) : '0x',\n    gasPrice ? toHex(gasPrice) : '0x',\n    gas ? toHex(gas) : '0x',\n    to ?? '0x',\n    value ? toHex(value) : '0x',\n    data ?? '0x',\n  ]\n\n  if (signature) {\n    let v = 27n + (signature.v === 27n ? 0n : 1n)\n    if (chainId > 0) v = BigInt(chainId * 2) + BigInt(35n + signature.v - 27n)\n    else if (signature.v !== v)\n      throw new InvalidLegacyVError({ v: signature.v })\n\n    serializedTransaction = [\n      ...serializedTransaction,\n      toHex(v),\n      signature.r,\n      signature.s,\n    ]\n  } else if (chainId > 0) {\n    serializedTransaction = [\n      ...serializedTransaction,\n      toHex(chainId),\n      '0x',\n      '0x',\n    ]\n  }\n\n  return toRlp(serializedTransaction)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}